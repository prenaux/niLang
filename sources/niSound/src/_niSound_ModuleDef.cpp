//////////////////////////////////////////////////////////////////////////////////////////////
//
// Autogenerated module definition, for ni::niSound.
//
//////////////////////////////////////////////////////////////////////////////////////////////
//lint -e750 : local macro '_XXX_ModuleDef' (line NN, file _XXX_ModuleDef.cpp) not referenced
//lint -e766 : Header file '...\ModuleDefImpl_Begin.h' not used in module '_XXX_ModuleDef.cpp'

#include "stdafx.h"
#include "API/niSound_ModuleDef.h"
#include <niLang/Utils/ModuleDefImpl_Begin.h>

#ifndef niConfig_OnlyObjectTypesIDL
#endif // #ifndef niConfig_OnlyObjectTypesIDL



#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
#define _niSound_ModuleDef
#include <niLang/Utils/VMCallCImpl.h>
#ifndef niConfig_NoXCALL
#define IDLC_BEGIN_NAMESPACE() namespace ni { namespace xcall_cimpl {
#define IDLC_END_NAMESPACE() }}
#ifndef XCALL_CIMPL
#define XCALL_CIMPL(NAME) ni::xcall_cimpl::NAME
#endif
#include "_idl/ISoundBuffer.h.idl.inl"
#include "_idl/ISoundData.h.idl.inl"
#include "_idl/ISoundDriver.h.idl.inl"
#include "_idl/ISoundFactory.h.idl.inl"
#include "_idl/ISoundFormat.h.idl.inl"
#include "_idl/ISoundMixer.h.idl.inl"
#include "_idl/ISoundSource.h.idl.inl"
#endif // niConfig_NoXCALL
#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

namespace ni {
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundBuffer wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundBuffer() {

// Method: CreateInstance
static const ni::sMethodDef iSoundBuffer_CreateInstance = {
  "CreateInstance",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_CreateInstance)
#else
  NULL
#endif
};

// Method: GetIsInstance
static const ni::sMethodDef iSoundBuffer_GetIsInstance = {
  "GetIsInstance",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_GetIsInstance)
#else
  NULL
#endif
};

// Method: GetIsStreamed
static const ni::sMethodDef iSoundBuffer_GetIsStreamed = {
  "GetIsStreamed",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_GetIsStreamed)
#else
  NULL
#endif
};

// Method: GetFormat
static const ni::sMethodDef iSoundBuffer_GetFormat = {
  "GetFormat",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "eSoundFormat",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_GetFormat)
#else
  NULL
#endif
};

// Method: GetFrequency
static const ni::sMethodDef iSoundBuffer_GetFrequency = {
  "GetFrequency",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_GetFrequency)
#else
  NULL
#endif
};

// Method: GetStreamSoundData
static const ni::sMethodDef iSoundBuffer_GetStreamSoundData = {
  "GetStreamSoundData",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundData), "iSoundData*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_GetStreamSoundData)
#else
  NULL
#endif
};

// Method: ResetPosition
static const ni::sMethodDef iSoundBuffer_ResetPosition = {
  "ResetPosition",
  0|ni::eType_Null, NULL, "void",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_ResetPosition)
#else
  NULL
#endif
};

// Method: ReadRaw
static const ni::sParameterDef iSoundBuffer_ReadRaw_Parameters[3] = { 
  { "apOut", ni::eType_Ptr, NULL, "tPtr" }, 
  { "anBytes", ni::eType_U32, NULL, "tU32" }, 
  { "abLoop", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iSoundBuffer_ReadRaw = {
  "ReadRaw",
  0|ni::eType_I8, NULL, "tBool",
  3, iSoundBuffer_ReadRaw_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundBuffer_ReadRaw)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundBuffer[] = {
	&iSoundBuffer_CreateInstance,
	&iSoundBuffer_GetIsInstance,
	&iSoundBuffer_GetIsStreamed,
	&iSoundBuffer_GetFormat,
	&iSoundBuffer_GetFrequency,
	&iSoundBuffer_GetStreamSoundData,
	&iSoundBuffer_ResetPosition,
	&iSoundBuffer_ReadRaw,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundBuffer[] = {
  &niGetInterfaceUUID(iDeviceResource),
};

static const ni::sInterfaceDef InterfaceDef_iSoundBuffer = {
  niGetInterfaceID(iSoundBuffer),
  &niGetInterfaceUUID(iSoundBuffer),
  1,
  Parents_iSoundBuffer,
  niCountOf(Methods_iSoundBuffer),Methods_iSoundBuffer,
  NULL
};

	return &InterfaceDef_iSoundBuffer;
}

// End of iSoundBuffer wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundData wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundData() {

// Method: Clone
static const ni::sMethodDef iSoundData_Clone = {
  "Clone",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundData), "iSoundData*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundData_Clone)
#else
  NULL
#endif
};

// Method: GetFormat
static const ni::sMethodDef iSoundData_GetFormat = {
  "GetFormat",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "eSoundFormat",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundData_GetFormat)
#else
  NULL
#endif
};

// Method: GetFrequency
static const ni::sMethodDef iSoundData_GetFrequency = {
  "GetFrequency",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundData_GetFrequency)
#else
  NULL
#endif
};

// Method: ReadRaw
static const ni::sParameterDef iSoundData_ReadRaw_Parameters[2] = { 
  { "apOut", ni::eType_Ptr, NULL, "tPtr" }, 
  { "anSize", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundData_ReadRaw = {
  "ReadRaw",
  0|ni::eType_I32, NULL, "tI32",
  2, iSoundData_ReadRaw_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundData_ReadRaw)
#else
  NULL
#endif
};

// Method: Reset
static const ni::sMethodDef iSoundData_Reset = {
  "Reset",
  0|ni::eType_Null, NULL, "void",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundData_Reset)
#else
  NULL
#endif
};

// Method: GetLength
static const ni::sMethodDef iSoundData_GetLength = {
  "GetLength",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundData_GetLength)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundData[] = {
	&iSoundData_Clone,
	&iSoundData_GetFormat,
	&iSoundData_GetFrequency,
	&iSoundData_ReadRaw,
	&iSoundData_Reset,
	&iSoundData_GetLength,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundData[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundData = {
  niGetInterfaceID(iSoundData),
  &niGetInterfaceUUID(iSoundData),
  1,
  Parents_iSoundData,
  niCountOf(Methods_iSoundData),Methods_iSoundData,
  NULL
};

	return &InterfaceDef_iSoundData;
}

// End of iSoundData wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundDataLoader wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundDataLoader() {

// Method: LoadSoundData
static const ni::sParameterDef iSoundDataLoader_LoadSoundData_Parameters[1] = { 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }
}; 
static const ni::sMethodDef iSoundDataLoader_LoadSoundData = {
  "LoadSoundData",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundData), "iSoundData*",
  1, iSoundDataLoader_LoadSoundData_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDataLoader_LoadSoundData)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundDataLoader[] = {
	&iSoundDataLoader_LoadSoundData,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundDataLoader[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundDataLoader = {
  niGetInterfaceID(iSoundDataLoader),
  &niGetInterfaceUUID(iSoundDataLoader),
  1,
  Parents_iSoundDataLoader,
  niCountOf(Methods_iSoundDataLoader),Methods_iSoundDataLoader,
  NULL
};

	return &InterfaceDef_iSoundDataLoader;
}

// End of iSoundDataLoader wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundDriverBufferDataSink wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundDriverBufferDataSink() {

// Method: OnSoundDriverBufferDataSink
static const ni::sParameterDef iSoundDriverBufferDataSink_OnSoundDriverBufferDataSink_Parameters[2] = { 
  { "ptr", ni::eType_Null|ni::eTypeFlags_Pointer, NULL, "void*" }, 
  { "size", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundDriverBufferDataSink_OnSoundDriverBufferDataSink = {
  "OnSoundDriverBufferDataSink",
  0|ni::eType_Null, NULL, "void",
  2, iSoundDriverBufferDataSink_OnSoundDriverBufferDataSink_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBufferDataSink_OnSoundDriverBufferDataSink)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundDriverBufferDataSink[] = {
	&iSoundDriverBufferDataSink_OnSoundDriverBufferDataSink,

};

//// Interface dispatch wrapper /////////////////////////////
struct niHidden DispatchWrapper_iSoundDriverBufferDataSink : public ni::cIUnknownImpl<ni::iSoundDriverBufferDataSink,ni::eIUnknownImplFlags_Aggregatable|ni::eIUnknownImplFlags_NoRefCount>
{
	DispatchWrapper_iSoundDriverBufferDataSink(ni::iDispatch* apDispatch) {
    mprotected_pAggregateParent = apDispatch;
	}
	~DispatchWrapper_iSoundDriverBufferDataSink() {
    this->Invalidate();
  }

	ni::iUnknown* __stdcall QueryInterface(const ni::tUUID& aIID) niImpl {
    if (aIID == niGetInterfaceUUID(iSoundDriverBufferDataSink))
      return this;
		return mprotected_pAggregateParent->QueryInterface(aIID);
	}
	void __stdcall ListInterfaces(ni::iMutableCollection* apLst, ni::tU32 anFlags) const niImpl {
    apLst->Add(niGetInterfaceUUID(iSoundDriverBufferDataSink));
		mprotected_pAggregateParent->ListInterfaces(apLst,anFlags);
	}

  // Method (0): iSoundDriverBufferDataSink::OnSoundDriverBufferDataSink
  void __stdcall OnSoundDriverBufferDataSink(void * ptr, tU32 size) {
    ni::Var _params_[2];
    _params_[0] = ptr;
    _params_[1] = size;
    ((ni::iDispatch*)(mprotected_pAggregateParent))->CallMethod(&iSoundDriverBufferDataSink_OnSoundDriverBufferDataSink,0,_params_,2,NULL);
	}

	static ni::iUnknown* Create(ni::iDispatch* apDispatch) {
		niAssert(niIsOK(apDispatch));
    if (!apDispatch->InitializeMethods(Methods_iSoundDriverBufferDataSink, niCountOf(Methods_iSoundDriverBufferDataSink))) {
      niError(niFmt("Can't initialize dispatch methods for %s.",  "iSoundDriverBufferDataSink"));
      return NULL;
    }
		return niNew DispatchWrapper_iSoundDriverBufferDataSink(apDispatch);
	}
};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundDriverBufferDataSink[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundDriverBufferDataSink = {
  niGetInterfaceID(iSoundDriverBufferDataSink),
  &niGetInterfaceUUID(iSoundDriverBufferDataSink),
  1,
  Parents_iSoundDriverBufferDataSink,
  niCountOf(Methods_iSoundDriverBufferDataSink),Methods_iSoundDriverBufferDataSink,
  DispatchWrapper_iSoundDriverBufferDataSink::Create
};

	return &InterfaceDef_iSoundDriverBufferDataSink;
}

// End of iSoundDriverBufferDataSink wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundDriverBuffer wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundDriverBuffer() {

// Method: SwitchIn
static const ni::sMethodDef iSoundDriverBuffer_SwitchIn = {
  "SwitchIn",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_SwitchIn)
#else
  NULL
#endif
};

// Method: SwitchOut
static const ni::sMethodDef iSoundDriverBuffer_SwitchOut = {
  "SwitchOut",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_SwitchOut)
#else
  NULL
#endif
};

// Method: Play
static const ni::sParameterDef iSoundDriverBuffer_Play_Parameters[2] = { 
  { "aFormat", ni::eType_Enum, NULL, "eSoundFormat" }, 
  { "anFreq", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundDriverBuffer_Play = {
  "Play",
  0|ni::eType_I8, NULL, "tBool",
  2, iSoundDriverBuffer_Play_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_Play)
#else
  NULL
#endif
};

// Method: Stop
static const ni::sMethodDef iSoundDriverBuffer_Stop = {
  "Stop",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_Stop)
#else
  NULL
#endif
};

// Method: GetSize
static const ni::sMethodDef iSoundDriverBuffer_GetSize = {
  "GetSize",
  0|ni::eType_Size, NULL, "tSize",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_GetSize)
#else
  NULL
#endif
};

// Method: SetSink
static const ni::sParameterDef iSoundDriverBuffer_SetSink_Parameters[1] = { 
  { "apSink", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundDriverBufferDataSink), "iSoundDriverBufferDataSink*" }
}; 
static const ni::sMethodDef iSoundDriverBuffer_SetSink = {
  "SetSink",
  0|ni::eType_Null, NULL, "void",
  1, iSoundDriverBuffer_SetSink_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_SetSink)
#else
  NULL
#endif
};

// Method: GetSink
static const ni::sMethodDef iSoundDriverBuffer_GetSink = {
  "GetSink",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundDriverBufferDataSink), "iSoundDriverBufferDataSink*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_GetSink)
#else
  NULL
#endif
};

// Method: UpdateBuffer
static const ni::sMethodDef iSoundDriverBuffer_UpdateBuffer = {
  "UpdateBuffer",
  0|ni::eType_Null, NULL, "void",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriverBuffer_UpdateBuffer)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundDriverBuffer[] = {
	&iSoundDriverBuffer_SwitchIn,
	&iSoundDriverBuffer_SwitchOut,
	&iSoundDriverBuffer_Play,
	&iSoundDriverBuffer_Stop,
	&iSoundDriverBuffer_GetSize,
	&iSoundDriverBuffer_SetSink,
	&iSoundDriverBuffer_GetSink,
	&iSoundDriverBuffer_UpdateBuffer,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundDriverBuffer[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundDriverBuffer = {
  niGetInterfaceID(iSoundDriverBuffer),
  &niGetInterfaceUUID(iSoundDriverBuffer),
  1,
  Parents_iSoundDriverBuffer,
  niCountOf(Methods_iSoundDriverBuffer),Methods_iSoundDriverBuffer,
  NULL
};

	return &InterfaceDef_iSoundDriverBuffer;
}

// End of iSoundDriverBuffer wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundDriver wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundDriver() {

// Method: GetName
static const ni::sMethodDef iSoundDriver_GetName = {
  "GetName",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_GetName)
#else
  NULL
#endif
};

// Method: GetCaps
static const ni::sMethodDef iSoundDriver_GetCaps = {
  "GetCaps",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "tSoundDriverCapFlags",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_GetCaps)
#else
  NULL
#endif
};

// Method: Startup
static const ni::sParameterDef iSoundDriver_Startup_Parameters[3] = { 
  { "aFormat", ni::eType_Enum, NULL, "eSoundFormat" }, 
  { "anFrequency", ni::eType_U32, NULL, "tU32" }, 
  { "aWindowHandle", ni::eType_IntPtr, NULL, "tIntPtr" }
}; 
static const ni::sMethodDef iSoundDriver_Startup = {
  "Startup",
  0|ni::eType_I8, NULL, "tBool",
  3, iSoundDriver_Startup_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_Startup)
#else
  NULL
#endif
};

// Method: Shutdown
static const ni::sMethodDef iSoundDriver_Shutdown = {
  "Shutdown",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_Shutdown)
#else
  NULL
#endif
};

// Method: SwitchIn
static const ni::sMethodDef iSoundDriver_SwitchIn = {
  "SwitchIn",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_SwitchIn)
#else
  NULL
#endif
};

// Method: SwitchOut
static const ni::sMethodDef iSoundDriver_SwitchOut = {
  "SwitchOut",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_SwitchOut)
#else
  NULL
#endif
};

// Method: GetBuffer
static const ni::sMethodDef iSoundDriver_GetBuffer = {
  "GetBuffer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundDriverBuffer), "iSoundDriverBuffer*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_GetBuffer)
#else
  NULL
#endif
};

// Method: GetMixer
static const ni::sMethodDef iSoundDriver_GetMixer = {
  "GetMixer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundMixer), "iSoundMixer*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_GetMixer)
#else
  NULL
#endif
};

// Method: GetMixer3D
static const ni::sMethodDef iSoundDriver_GetMixer3D = {
  "GetMixer3D",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundMixer3D), "iSoundMixer3D*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_GetMixer3D)
#else
  NULL
#endif
};

// Method: Update
static const ni::sMethodDef iSoundDriver_Update = {
  "Update",
  0|ni::eType_Null, NULL, "void",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundDriver_Update)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundDriver[] = {
	&iSoundDriver_GetName,
	&iSoundDriver_GetCaps,
	&iSoundDriver_Startup,
	&iSoundDriver_Shutdown,
	&iSoundDriver_SwitchIn,
	&iSoundDriver_SwitchOut,
	&iSoundDriver_GetBuffer,
	&iSoundDriver_GetMixer,
	&iSoundDriver_GetMixer3D,
	&iSoundDriver_Update,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundDriver[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundDriver = {
  niGetInterfaceID(iSoundDriver),
  &niGetInterfaceUUID(iSoundDriver),
  1,
  Parents_iSoundDriver,
  niCountOf(Methods_iSoundDriver),Methods_iSoundDriver,
  NULL
};

	return &InterfaceDef_iSoundDriver;
}

// End of iSoundDriver wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundFactory wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundFactory() {

// Method: GetNumDrivers
static const ni::sMethodDef iSoundFactory_GetNumDrivers = {
  "GetNumDrivers",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetNumDrivers)
#else
  NULL
#endif
};

// Method: GetDriver
static const ni::sParameterDef iSoundFactory_GetDriver_Parameters[1] = { 
  { "anIndex", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundFactory_GetDriver = {
  "GetDriver",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundDriver), "iSoundDriver*",
  1, iSoundFactory_GetDriver_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetDriver)
#else
  NULL
#endif
};

// Method: GetDriverName
static const ni::sParameterDef iSoundFactory_GetDriverName_Parameters[1] = { 
  { "anIndex", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundFactory_GetDriverName = {
  "GetDriverName",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*",
  1, iSoundFactory_GetDriverName_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetDriverName)
#else
  NULL
#endif
};

// Method: GetDriverCaps
static const ni::sParameterDef iSoundFactory_GetDriverCaps_Parameters[1] = { 
  { "anIndex", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundFactory_GetDriverCaps = {
  "GetDriverCaps",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "tSoundDriverCapFlags",
  1, iSoundFactory_GetDriverCaps_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetDriverCaps)
#else
  NULL
#endif
};

// Method: GetDriverIndex
static const ni::sParameterDef iSoundFactory_GetDriverIndex_Parameters[1] = { 
  { "ahspName", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }
}; 
static const ni::sMethodDef iSoundFactory_GetDriverIndex = {
  "GetDriverIndex",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  1, iSoundFactory_GetDriverIndex_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetDriverIndex)
#else
  NULL
#endif
};

// Method: StartupDriver
static const ni::sParameterDef iSoundFactory_StartupDriver_Parameters[4] = { 
  { "anDriver", ni::eType_U32, NULL, "tU32" }, 
  { "aFormat", ni::eType_Enum, NULL, "eSoundFormat" }, 
  { "anFrequency", ni::eType_U32, NULL, "tU32" }, 
  { "aWindowHandle", ni::eType_IntPtr, NULL, "tIntPtr" }
}; 
static const ni::sMethodDef iSoundFactory_StartupDriver = {
  "StartupDriver",
  0|ni::eType_I8, NULL, "tBool",
  4, iSoundFactory_StartupDriver_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_StartupDriver)
#else
  NULL
#endif
};

// Method: ShutdownDriver
static const ni::sMethodDef iSoundFactory_ShutdownDriver = {
  "ShutdownDriver",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_ShutdownDriver)
#else
  NULL
#endif
};

// Method: GetActiveDriver
static const ni::sMethodDef iSoundFactory_GetActiveDriver = {
  "GetActiveDriver",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetActiveDriver)
#else
  NULL
#endif
};

// Method: GetBuffer
static const ni::sMethodDef iSoundFactory_GetBuffer = {
  "GetBuffer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundDriverBuffer), "iSoundDriverBuffer*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetBuffer)
#else
  NULL
#endif
};

// Method: GetMixer
static const ni::sMethodDef iSoundFactory_GetMixer = {
  "GetMixer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundMixer), "iSoundMixer*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetMixer)
#else
  NULL
#endif
};

// Method: GetMixer3D
static const ni::sMethodDef iSoundFactory_GetMixer3D = {
  "GetMixer3D",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundMixer3D), "iSoundMixer3D*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetMixer3D)
#else
  NULL
#endif
};

// Method: SwitchIn
static const ni::sMethodDef iSoundFactory_SwitchIn = {
  "SwitchIn",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SwitchIn)
#else
  NULL
#endif
};

// Method: SwitchOut
static const ni::sMethodDef iSoundFactory_SwitchOut = {
  "SwitchOut",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SwitchOut)
#else
  NULL
#endif
};

// Method: Update
static const ni::sParameterDef iSoundFactory_Update_Parameters[1] = { 
  { "afDeltaTime", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundFactory_Update = {
  "Update",
  0|ni::eType_I8, NULL, "tBool",
  1, iSoundFactory_Update_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_Update)
#else
  NULL
#endif
};

// Method: LoadSoundData
static const ni::sParameterDef iSoundFactory_LoadSoundData_Parameters[1] = { 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }
}; 
static const ni::sMethodDef iSoundFactory_LoadSoundData = {
  "LoadSoundData",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundData), "iSoundData*",
  1, iSoundFactory_LoadSoundData_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_LoadSoundData)
#else
  NULL
#endif
};

// Method: CreateSoundBufferEx
static const ni::sParameterDef iSoundFactory_CreateSoundBufferEx_Parameters[3] = { 
  { "apData", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundData), "iSoundData*" }, 
  { "abStream", ni::eType_I8, NULL, "tBool" }, 
  { "ahspName", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }
}; 
static const ni::sMethodDef iSoundFactory_CreateSoundBufferEx = {
  "CreateSoundBufferEx",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*",
  3, iSoundFactory_CreateSoundBufferEx_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_CreateSoundBufferEx)
#else
  NULL
#endif
};

// Method: CreateSoundBuffer
static const ni::sParameterDef iSoundFactory_CreateSoundBuffer_Parameters[3] = { 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }, 
  { "abStream", ni::eType_I8, NULL, "tBool" }, 
  { "ahspName", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }
}; 
static const ni::sMethodDef iSoundFactory_CreateSoundBuffer = {
  "CreateSoundBuffer",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*",
  3, iSoundFactory_CreateSoundBuffer_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_CreateSoundBuffer)
#else
  NULL
#endif
};

// Method: CreateSoundBufferFromRes
static const ni::sParameterDef iSoundFactory_CreateSoundBufferFromRes_Parameters[2] = { 
  { "ahspName", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(ni::iHString), "ni::iHString*" }, 
  { "abStream", ni::eType_I8, NULL, "ni::tBool" }
}; 
static const ni::sMethodDef iSoundFactory_CreateSoundBufferFromRes = {
  "CreateSoundBufferFromRes",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(ni::iSoundBuffer), "ni::iSoundBuffer*",
  2, iSoundFactory_CreateSoundBufferFromRes_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_CreateSoundBufferFromRes)
#else
  NULL
#endif
};

// Method: GetSoundBuffer
static const ni::sParameterDef iSoundFactory_GetSoundBuffer_Parameters[1] = { 
  { "ahspName", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }
}; 
static const ni::sMethodDef iSoundFactory_GetSoundBuffer = {
  "GetSoundBuffer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*",
  1, iSoundFactory_GetSoundBuffer_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetSoundBuffer)
#else
  NULL
#endif
};

// Method: CreateSoundSource
static const ni::sParameterDef iSoundFactory_CreateSoundSource_Parameters[1] = { 
  { "apBuffer", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*" }
}; 
static const ni::sMethodDef iSoundFactory_CreateSoundSource = {
  "CreateSoundSource",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundSource), "iSoundSource*",
  1, iSoundFactory_CreateSoundSource_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_CreateSoundSource)
#else
  NULL
#endif
};

// Method: SetListenerPosition
static const ni::sParameterDef iSoundFactory_SetListenerPosition_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerPosition = {
  "SetListenerPosition",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundFactory_SetListenerPosition_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerPosition)
#else
  NULL
#endif
};

// Method: GetListenerPosition
static const ni::sMethodDef iSoundFactory_GetListenerPosition = {
  "GetListenerPosition",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerPosition)
#else
  NULL
#endif
};

// Method: SetListenerVelocity
static const ni::sParameterDef iSoundFactory_SetListenerVelocity_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerVelocity = {
  "SetListenerVelocity",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundFactory_SetListenerVelocity_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerVelocity)
#else
  NULL
#endif
};

// Method: GetListenerVelocity
static const ni::sMethodDef iSoundFactory_GetListenerVelocity = {
  "GetListenerVelocity",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerVelocity)
#else
  NULL
#endif
};

// Method: SetListenerForward
static const ni::sParameterDef iSoundFactory_SetListenerForward_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerForward = {
  "SetListenerForward",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundFactory_SetListenerForward_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerForward)
#else
  NULL
#endif
};

// Method: GetListenerForward
static const ni::sMethodDef iSoundFactory_GetListenerForward = {
  "GetListenerForward",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerForward)
#else
  NULL
#endif
};

// Method: SetListenerUp
static const ni::sParameterDef iSoundFactory_SetListenerUp_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerUp = {
  "SetListenerUp",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundFactory_SetListenerUp_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerUp)
#else
  NULL
#endif
};

// Method: GetListenerUp
static const ni::sMethodDef iSoundFactory_GetListenerUp = {
  "GetListenerUp",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerUp)
#else
  NULL
#endif
};

// Method: SetListenerDistanceScale
static const ni::sParameterDef iSoundFactory_SetListenerDistanceScale_Parameters[1] = { 
  { "afScale", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerDistanceScale = {
  "SetListenerDistanceScale",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundFactory_SetListenerDistanceScale_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerDistanceScale)
#else
  NULL
#endif
};

// Method: GetListenerDistanceScale
static const ni::sMethodDef iSoundFactory_GetListenerDistanceScale = {
  "GetListenerDistanceScale",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerDistanceScale)
#else
  NULL
#endif
};

// Method: SetListenerRolloffScale
static const ni::sParameterDef iSoundFactory_SetListenerRolloffScale_Parameters[1] = { 
  { "afScale", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerRolloffScale = {
  "SetListenerRolloffScale",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundFactory_SetListenerRolloffScale_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerRolloffScale)
#else
  NULL
#endif
};

// Method: GetListenerRolloffScale
static const ni::sMethodDef iSoundFactory_GetListenerRolloffScale = {
  "GetListenerRolloffScale",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerRolloffScale)
#else
  NULL
#endif
};

// Method: SetListenerDopplerScale
static const ni::sParameterDef iSoundFactory_SetListenerDopplerScale_Parameters[1] = { 
  { "afScale", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundFactory_SetListenerDopplerScale = {
  "SetListenerDopplerScale",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundFactory_SetListenerDopplerScale_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_SetListenerDopplerScale)
#else
  NULL
#endif
};

// Method: GetListenerDopplerScale
static const ni::sMethodDef iSoundFactory_GetListenerDopplerScale = {
  "GetListenerDopplerScale",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_GetListenerDopplerScale)
#else
  NULL
#endif
};

// Method: MusicPlay
static const ni::sParameterDef iSoundFactory_MusicPlay_Parameters[4] = { 
  { "apSoundSource", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundSource), "iSoundSource*" }, 
  { "afVolume", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afSpeed", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afBlendTime", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundFactory_MusicPlay = {
  "MusicPlay",
  0|ni::eType_I8, NULL, "ni::tBool",
  4, iSoundFactory_MusicPlay_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_MusicPlay)
#else
  NULL
#endif
};

// Method: MusicStop
static const ni::sParameterDef iSoundFactory_MusicStop_Parameters[1] = { 
  { "afBlendTime", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundFactory_MusicStop = {
  "MusicStop",
  0|ni::eType_I8, NULL, "ni::tBool",
  1, iSoundFactory_MusicStop_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_MusicStop)
#else
  NULL
#endif
};

// Method: MusicSpeed
static const ni::sParameterDef iSoundFactory_MusicSpeed_Parameters[2] = { 
  { "afSpeed", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afBlendTime", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundFactory_MusicSpeed = {
  "MusicSpeed",
  0|ni::eType_I8, NULL, "ni::tBool",
  2, iSoundFactory_MusicSpeed_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_MusicSpeed)
#else
  NULL
#endif
};

// Method: MusicVolume
static const ni::sParameterDef iSoundFactory_MusicVolume_Parameters[2] = { 
  { "afVolume", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afBlendTime", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundFactory_MusicVolume = {
  "MusicVolume",
  0|ni::eType_I8, NULL, "ni::tBool",
  2, iSoundFactory_MusicVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFactory_MusicVolume)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundFactory[] = {
	&iSoundFactory_GetNumDrivers,
	&iSoundFactory_GetDriver,
	&iSoundFactory_GetDriverName,
	&iSoundFactory_GetDriverCaps,
	&iSoundFactory_GetDriverIndex,
	&iSoundFactory_StartupDriver,
	&iSoundFactory_ShutdownDriver,
	&iSoundFactory_GetActiveDriver,
	&iSoundFactory_GetBuffer,
	&iSoundFactory_GetMixer,
	&iSoundFactory_GetMixer3D,
	&iSoundFactory_SwitchIn,
	&iSoundFactory_SwitchOut,
	&iSoundFactory_Update,
	&iSoundFactory_LoadSoundData,
	&iSoundFactory_CreateSoundBufferEx,
	&iSoundFactory_CreateSoundBuffer,
	&iSoundFactory_CreateSoundBufferFromRes,
	&iSoundFactory_GetSoundBuffer,
	&iSoundFactory_CreateSoundSource,
	&iSoundFactory_SetListenerPosition,
	&iSoundFactory_GetListenerPosition,
	&iSoundFactory_SetListenerVelocity,
	&iSoundFactory_GetListenerVelocity,
	&iSoundFactory_SetListenerForward,
	&iSoundFactory_GetListenerForward,
	&iSoundFactory_SetListenerUp,
	&iSoundFactory_GetListenerUp,
	&iSoundFactory_SetListenerDistanceScale,
	&iSoundFactory_GetListenerDistanceScale,
	&iSoundFactory_SetListenerRolloffScale,
	&iSoundFactory_GetListenerRolloffScale,
	&iSoundFactory_SetListenerDopplerScale,
	&iSoundFactory_GetListenerDopplerScale,
	&iSoundFactory_MusicPlay,
	&iSoundFactory_MusicStop,
	&iSoundFactory_MusicSpeed,
	&iSoundFactory_MusicVolume,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundFactory[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundFactory = {
  niGetInterfaceID(iSoundFactory),
  &niGetInterfaceUUID(iSoundFactory),
  1,
  Parents_iSoundFactory,
  niCountOf(Methods_iSoundFactory),Methods_iSoundFactory,
  NULL
};

	return &InterfaceDef_iSoundFactory;
}

// End of iSoundFactory wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundFormat wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundFormat() {

// Method: GetFormat
static const ni::sMethodDef iSoundFormat_GetFormat = {
  "GetFormat",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetFormat)
#else
  NULL
#endif
};

// Method: GetBaseFormat
static const ni::sMethodDef iSoundFormat_GetBaseFormat = {
  "GetBaseFormat",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetBaseFormat)
#else
  NULL
#endif
};

// Method: SetBits
static const ni::sParameterDef iSoundFormat_SetBits_Parameters[1] = { 
  { "aVal", ni::eType_U8, NULL, "tU8" }
}; 
static const ni::sMethodDef iSoundFormat_SetBits = {
  "SetBits",
  ni::eTypeFlags_MethodSetter|0|ni::eType_U8, NULL, "void",
  1, iSoundFormat_SetBits_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_SetBits)
#else
  NULL
#endif
};

// Method: GetBits
static const ni::sMethodDef iSoundFormat_GetBits = {
  "GetBits",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U8, NULL, "tU8",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetBits)
#else
  NULL
#endif
};

// Method: SetChannels
static const ni::sParameterDef iSoundFormat_SetChannels_Parameters[1] = { 
  { "aVal", ni::eType_U8, NULL, "tU8" }
}; 
static const ni::sMethodDef iSoundFormat_SetChannels = {
  "SetChannels",
  ni::eTypeFlags_MethodSetter|0|ni::eType_U8, NULL, "void",
  1, iSoundFormat_SetChannels_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_SetChannels)
#else
  NULL
#endif
};

// Method: GetChannels
static const ni::sMethodDef iSoundFormat_GetChannels = {
  "GetChannels",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U8, NULL, "tU8",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetChannels)
#else
  NULL
#endif
};

// Method: SetExtra
static const ni::sParameterDef iSoundFormat_SetExtra_Parameters[1] = { 
  { "aVal", ni::eType_U16, NULL, "tU16" }
}; 
static const ni::sMethodDef iSoundFormat_SetExtra = {
  "SetExtra",
  ni::eTypeFlags_MethodSetter|0|ni::eType_U16, NULL, "void",
  1, iSoundFormat_SetExtra_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_SetExtra)
#else
  NULL
#endif
};

// Method: GetExtra
static const ni::sMethodDef iSoundFormat_GetExtra = {
  "GetExtra",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U16, NULL, "tU16",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetExtra)
#else
  NULL
#endif
};

// Method: GetSampleSize
static const ni::sMethodDef iSoundFormat_GetSampleSize = {
  "GetSampleSize",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetSampleSize)
#else
  NULL
#endif
};

// Method: GetFrameSize
static const ni::sMethodDef iSoundFormat_GetFrameSize = {
  "GetFrameSize",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundFormat_GetFrameSize)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundFormat[] = {
	&iSoundFormat_GetFormat,
	&iSoundFormat_GetBaseFormat,
	&iSoundFormat_SetBits,
	&iSoundFormat_GetBits,
	&iSoundFormat_SetChannels,
	&iSoundFormat_GetChannels,
	&iSoundFormat_SetExtra,
	&iSoundFormat_GetExtra,
	&iSoundFormat_GetSampleSize,
	&iSoundFormat_GetFrameSize,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundFormat[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundFormat = {
  niGetInterfaceID(iSoundFormat),
  &niGetInterfaceUUID(iSoundFormat),
  1,
  Parents_iSoundFormat,
  niCountOf(Methods_iSoundFormat),Methods_iSoundFormat,
  NULL
};

	return &InterfaceDef_iSoundFormat;
}

// End of iSoundFormat wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundMixer wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundMixer() {

// Method: SwitchIn
static const ni::sMethodDef iSoundMixer_SwitchIn = {
  "SwitchIn",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SwitchIn)
#else
  NULL
#endif
};

// Method: SwitchOut
static const ni::sMethodDef iSoundMixer_SwitchOut = {
  "SwitchOut",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SwitchOut)
#else
  NULL
#endif
};

// Method: SetAmplification
static const ni::sParameterDef iSoundMixer_SetAmplification_Parameters[1] = { 
  { "ampli", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetAmplification = {
  "SetAmplification",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I32, NULL, "void",
  1, iSoundMixer_SetAmplification_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetAmplification)
#else
  NULL
#endif
};

// Method: GetAmplification
static const ni::sMethodDef iSoundMixer_GetAmplification = {
  "GetAmplification",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetAmplification)
#else
  NULL
#endif
};

// Method: SetSaturationCheck
static const ni::sParameterDef iSoundMixer_SetSaturationCheck_Parameters[1] = { 
  { "check", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iSoundMixer_SetSaturationCheck = {
  "SetSaturationCheck",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I8, NULL, "void",
  1, iSoundMixer_SetSaturationCheck_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetSaturationCheck)
#else
  NULL
#endif
};

// Method: GetSaturationCheck
static const ni::sMethodDef iSoundMixer_GetSaturationCheck = {
  "GetSaturationCheck",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetSaturationCheck)
#else
  NULL
#endif
};

// Method: SetReverseStereo
static const ni::sParameterDef iSoundMixer_SetReverseStereo_Parameters[1] = { 
  { "reverse", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iSoundMixer_SetReverseStereo = {
  "SetReverseStereo",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I8, NULL, "void",
  1, iSoundMixer_SetReverseStereo_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetReverseStereo)
#else
  NULL
#endif
};

// Method: GetReverseStereo
static const ni::sMethodDef iSoundMixer_GetReverseStereo = {
  "GetReverseStereo",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetReverseStereo)
#else
  NULL
#endif
};

// Method: SetMasterVolume
static const ni::sParameterDef iSoundMixer_SetMasterVolume_Parameters[1] = { 
  { "vol", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetMasterVolume = {
  "SetMasterVolume",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I32, NULL, "void",
  1, iSoundMixer_SetMasterVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetMasterVolume)
#else
  NULL
#endif
};

// Method: GetMasterVolume
static const ni::sMethodDef iSoundMixer_GetMasterVolume = {
  "GetMasterVolume",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetMasterVolume)
#else
  NULL
#endif
};

// Method: GetNumChannels
static const ni::sMethodDef iSoundMixer_GetNumChannels = {
  "GetNumChannels",
  0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetNumChannels)
#else
  NULL
#endif
};

// Method: StartChannel
static const ni::sParameterDef iSoundMixer_StartChannel_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_StartChannel = {
  "StartChannel",
  0|ni::eType_I8, NULL, "tBool",
  1, iSoundMixer_StartChannel_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_StartChannel)
#else
  NULL
#endif
};

// Method: StopChannel
static const ni::sParameterDef iSoundMixer_StopChannel_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_StopChannel = {
  "StopChannel",
  0|ni::eType_I8, NULL, "tBool",
  1, iSoundMixer_StopChannel_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_StopChannel)
#else
  NULL
#endif
};

// Method: StopAllChannels
static const ni::sMethodDef iSoundMixer_StopAllChannels = {
  "StopAllChannels",
  0|ni::eType_Null, NULL, "void",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_StopAllChannels)
#else
  NULL
#endif
};

// Method: SetChannelMasterVolume
static const ni::sParameterDef iSoundMixer_SetChannelMasterVolume_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "vol", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelMasterVolume = {
  "SetChannelMasterVolume",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelMasterVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelMasterVolume)
#else
  NULL
#endif
};

// Method: GetChannelMasterVolume
static const ni::sParameterDef iSoundMixer_GetChannelMasterVolume_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelMasterVolume = {
  "GetChannelMasterVolume",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  1, iSoundMixer_GetChannelMasterVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelMasterVolume)
#else
  NULL
#endif
};

// Method: SetChannelMasterPan
static const ni::sParameterDef iSoundMixer_SetChannelMasterPan_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "pan", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelMasterPan = {
  "SetChannelMasterPan",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelMasterPan_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelMasterPan)
#else
  NULL
#endif
};

// Method: GetChannelMasterPan
static const ni::sParameterDef iSoundMixer_GetChannelMasterPan_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelMasterPan = {
  "GetChannelMasterPan",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  1, iSoundMixer_GetChannelMasterPan_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelMasterPan)
#else
  NULL
#endif
};

// Method: SetChannelBuffer
static const ni::sParameterDef iSoundMixer_SetChannelBuffer_Parameters[2] = { 
  { "anChan", ni::eType_U32, NULL, "tU32" }, 
  { "apBuffer", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelBuffer = {
  "SetChannelBuffer",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I8, NULL, "tBool",
  2, iSoundMixer_SetChannelBuffer_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelBuffer)
#else
  NULL
#endif
};

// Method: GetChannelBuffer
static const ni::sParameterDef iSoundMixer_GetChannelBuffer_Parameters[1] = { 
  { "anChan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelBuffer = {
  "GetChannelBuffer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*",
  1, iSoundMixer_GetChannelBuffer_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelBuffer)
#else
  NULL
#endif
};

// Method: SetChannelVolume
static const ni::sParameterDef iSoundMixer_SetChannelVolume_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "vol", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelVolume = {
  "SetChannelVolume",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelVolume)
#else
  NULL
#endif
};

// Method: GetChannelVolume
static const ni::sParameterDef iSoundMixer_GetChannelVolume_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelVolume = {
  "GetChannelVolume",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  1, iSoundMixer_GetChannelVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelVolume)
#else
  NULL
#endif
};

// Method: SetChannelPan
static const ni::sParameterDef iSoundMixer_SetChannelPan_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "pan", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelPan = {
  "SetChannelPan",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelPan_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelPan)
#else
  NULL
#endif
};

// Method: GetChannelPan
static const ni::sParameterDef iSoundMixer_GetChannelPan_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelPan = {
  "GetChannelPan",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  1, iSoundMixer_GetChannelPan_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelPan)
#else
  NULL
#endif
};

// Method: SetChannelFrequency
static const ni::sParameterDef iSoundMixer_SetChannelFrequency_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "frequency", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelFrequency = {
  "SetChannelFrequency",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelFrequency_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelFrequency)
#else
  NULL
#endif
};

// Method: GetChannelFrequency
static const ni::sParameterDef iSoundMixer_GetChannelFrequency_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelFrequency = {
  "GetChannelFrequency",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  1, iSoundMixer_GetChannelFrequency_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelFrequency)
#else
  NULL
#endif
};

// Method: SetChannelLoop
static const ni::sParameterDef iSoundMixer_SetChannelLoop_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "loop", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelLoop = {
  "SetChannelLoop",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelLoop_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelLoop)
#else
  NULL
#endif
};

// Method: GetChannelLoop
static const ni::sParameterDef iSoundMixer_GetChannelLoop_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelLoop = {
  "GetChannelLoop",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  1, iSoundMixer_GetChannelLoop_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelLoop)
#else
  NULL
#endif
};

// Method: SetChannelPause
static const ni::sParameterDef iSoundMixer_SetChannelPause_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "pause", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelPause = {
  "SetChannelPause",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelPause_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelPause)
#else
  NULL
#endif
};

// Method: GetChannelPause
static const ni::sParameterDef iSoundMixer_GetChannelPause_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelPause = {
  "GetChannelPause",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  1, iSoundMixer_GetChannelPause_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelPause)
#else
  NULL
#endif
};

// Method: GetIsChannelBusy
static const ni::sParameterDef iSoundMixer_GetIsChannelBusy_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetIsChannelBusy = {
  "GetIsChannelBusy",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  1, iSoundMixer_GetIsChannelBusy_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetIsChannelBusy)
#else
  NULL
#endif
};

// Method: SetChannelUserID
static const ni::sParameterDef iSoundMixer_SetChannelUserID_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "anUserId", ni::eType_IntPtr, NULL, "tIntPtr" }
}; 
static const ni::sMethodDef iSoundMixer_SetChannelUserID = {
  "SetChannelUserID",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer_SetChannelUserID_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_SetChannelUserID)
#else
  NULL
#endif
};

// Method: GetChannelUserID
static const ni::sParameterDef iSoundMixer_GetChannelUserID_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer_GetChannelUserID = {
  "GetChannelUserID",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IntPtr, NULL, "tIntPtr",
  1, iSoundMixer_GetChannelUserID_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_GetChannelUserID)
#else
  NULL
#endif
};

// Method: UpdateMixer
static const ni::sMethodDef iSoundMixer_UpdateMixer = {
  "UpdateMixer",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer_UpdateMixer)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundMixer[] = {
	&iSoundMixer_SwitchIn,
	&iSoundMixer_SwitchOut,
	&iSoundMixer_SetAmplification,
	&iSoundMixer_GetAmplification,
	&iSoundMixer_SetSaturationCheck,
	&iSoundMixer_GetSaturationCheck,
	&iSoundMixer_SetReverseStereo,
	&iSoundMixer_GetReverseStereo,
	&iSoundMixer_SetMasterVolume,
	&iSoundMixer_GetMasterVolume,
	&iSoundMixer_GetNumChannels,
	&iSoundMixer_StartChannel,
	&iSoundMixer_StopChannel,
	&iSoundMixer_StopAllChannels,
	&iSoundMixer_SetChannelMasterVolume,
	&iSoundMixer_GetChannelMasterVolume,
	&iSoundMixer_SetChannelMasterPan,
	&iSoundMixer_GetChannelMasterPan,
	&iSoundMixer_SetChannelBuffer,
	&iSoundMixer_GetChannelBuffer,
	&iSoundMixer_SetChannelVolume,
	&iSoundMixer_GetChannelVolume,
	&iSoundMixer_SetChannelPan,
	&iSoundMixer_GetChannelPan,
	&iSoundMixer_SetChannelFrequency,
	&iSoundMixer_GetChannelFrequency,
	&iSoundMixer_SetChannelLoop,
	&iSoundMixer_GetChannelLoop,
	&iSoundMixer_SetChannelPause,
	&iSoundMixer_GetChannelPause,
	&iSoundMixer_GetIsChannelBusy,
	&iSoundMixer_SetChannelUserID,
	&iSoundMixer_GetChannelUserID,
	&iSoundMixer_UpdateMixer,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundMixer[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundMixer = {
  niGetInterfaceID(iSoundMixer),
  &niGetInterfaceUUID(iSoundMixer),
  1,
  Parents_iSoundMixer,
  niCountOf(Methods_iSoundMixer),Methods_iSoundMixer,
  NULL
};

	return &InterfaceDef_iSoundMixer;
}

// End of iSoundMixer wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundMixer3D wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundMixer3D() {

// Method: GetFirst3DChannel
static const ni::sMethodDef iSoundMixer3D_GetFirst3DChannel = {
  "GetFirst3DChannel",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetFirst3DChannel)
#else
  NULL
#endif
};

// Method: GetIsChannel3D
static const ni::sParameterDef iSoundMixer3D_GetIsChannel3D_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetIsChannel3D = {
  "GetIsChannel3D",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  1, iSoundMixer3D_GetIsChannel3D_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetIsChannel3D)
#else
  NULL
#endif
};

// Method: SetChannelMode
static const ni::sParameterDef iSoundMixer3D_SetChannelMode_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "aMode", ni::eType_Enum, NULL, "eSoundMode" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelMode = {
  "SetChannelMode",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelMode_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelMode)
#else
  NULL
#endif
};

// Method: GetChannelMode
static const ni::sParameterDef iSoundMixer3D_GetChannelMode_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelMode = {
  "GetChannelMode",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "eSoundMode",
  1, iSoundMixer3D_GetChannelMode_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelMode)
#else
  NULL
#endif
};

// Method: SetChannelPosition
static const ni::sParameterDef iSoundMixer3D_SetChannelPosition_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "avPosition", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelPosition = {
  "SetChannelPosition",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelPosition_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelPosition)
#else
  NULL
#endif
};

// Method: GetChannelPosition
static const ni::sParameterDef iSoundMixer3D_GetChannelPosition_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelPosition = {
  "GetChannelPosition",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  1, iSoundMixer3D_GetChannelPosition_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelPosition)
#else
  NULL
#endif
};

// Method: SetChannelVelocity
static const ni::sParameterDef iSoundMixer3D_SetChannelVelocity_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "avVelocity", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelVelocity = {
  "SetChannelVelocity",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelVelocity_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelVelocity)
#else
  NULL
#endif
};

// Method: GetChannelVelocity
static const ni::sParameterDef iSoundMixer3D_GetChannelVelocity_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelVelocity = {
  "GetChannelVelocity",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  1, iSoundMixer3D_GetChannelVelocity_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelVelocity)
#else
  NULL
#endif
};

// Method: SetChannelMinDistance
static const ni::sParameterDef iSoundMixer3D_SetChannelMinDistance_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "afMinDistance", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelMinDistance = {
  "SetChannelMinDistance",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelMinDistance_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelMinDistance)
#else
  NULL
#endif
};

// Method: GetChannelMinDistance
static const ni::sParameterDef iSoundMixer3D_GetChannelMinDistance_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelMinDistance = {
  "GetChannelMinDistance",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  1, iSoundMixer3D_GetChannelMinDistance_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelMinDistance)
#else
  NULL
#endif
};

// Method: SetChannelMaxDistance
static const ni::sParameterDef iSoundMixer3D_SetChannelMaxDistance_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "afMaxDistance", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelMaxDistance = {
  "SetChannelMaxDistance",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelMaxDistance_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelMaxDistance)
#else
  NULL
#endif
};

// Method: GetChannelMaxDistance
static const ni::sParameterDef iSoundMixer3D_GetChannelMaxDistance_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelMaxDistance = {
  "GetChannelMaxDistance",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  1, iSoundMixer3D_GetChannelMaxDistance_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelMaxDistance)
#else
  NULL
#endif
};

// Method: SetChannelConeInner
static const ni::sParameterDef iSoundMixer3D_SetChannelConeInner_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "afInsideAngle", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelConeInner = {
  "SetChannelConeInner",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelConeInner_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelConeInner)
#else
  NULL
#endif
};

// Method: GetChannelConeInner
static const ni::sParameterDef iSoundMixer3D_GetChannelConeInner_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelConeInner = {
  "GetChannelConeInner",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  1, iSoundMixer3D_GetChannelConeInner_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelConeInner)
#else
  NULL
#endif
};

// Method: SetChannelConeOuter
static const ni::sParameterDef iSoundMixer3D_SetChannelConeOuter_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "afOutsideAngle", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelConeOuter = {
  "SetChannelConeOuter",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelConeOuter_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelConeOuter)
#else
  NULL
#endif
};

// Method: GetChannelConeOuter
static const ni::sParameterDef iSoundMixer3D_GetChannelConeOuter_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelConeOuter = {
  "GetChannelConeOuter",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  1, iSoundMixer3D_GetChannelConeOuter_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelConeOuter)
#else
  NULL
#endif
};

// Method: SetChannelConeOuterVolume
static const ni::sParameterDef iSoundMixer3D_SetChannelConeOuterVolume_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "anOuterVolume", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelConeOuterVolume = {
  "SetChannelConeOuterVolume",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelConeOuterVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelConeOuterVolume)
#else
  NULL
#endif
};

// Method: GetChannelConeOuterVolume
static const ni::sParameterDef iSoundMixer3D_GetChannelConeOuterVolume_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelConeOuterVolume = {
  "GetChannelConeOuterVolume",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  1, iSoundMixer3D_GetChannelConeOuterVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelConeOuterVolume)
#else
  NULL
#endif
};

// Method: SetChannelConeDirection
static const ni::sParameterDef iSoundMixer3D_SetChannelConeDirection_Parameters[2] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }, 
  { "avDir", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetChannelConeDirection = {
  "SetChannelConeDirection",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Null, NULL, "void",
  2, iSoundMixer3D_SetChannelConeDirection_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetChannelConeDirection)
#else
  NULL
#endif
};

// Method: GetChannelConeDirection
static const ni::sParameterDef iSoundMixer3D_GetChannelConeDirection_Parameters[1] = { 
  { "nchan", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iSoundMixer3D_GetChannelConeDirection = {
  "GetChannelConeDirection",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  1, iSoundMixer3D_GetChannelConeDirection_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetChannelConeDirection)
#else
  NULL
#endif
};

// Method: SetListenerPosition
static const ni::sParameterDef iSoundMixer3D_SetListenerPosition_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerPosition = {
  "SetListenerPosition",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundMixer3D_SetListenerPosition_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerPosition)
#else
  NULL
#endif
};

// Method: GetListenerPosition
static const ni::sMethodDef iSoundMixer3D_GetListenerPosition = {
  "GetListenerPosition",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerPosition)
#else
  NULL
#endif
};

// Method: SetListenerVelocity
static const ni::sParameterDef iSoundMixer3D_SetListenerVelocity_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerVelocity = {
  "SetListenerVelocity",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundMixer3D_SetListenerVelocity_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerVelocity)
#else
  NULL
#endif
};

// Method: GetListenerVelocity
static const ni::sMethodDef iSoundMixer3D_GetListenerVelocity = {
  "GetListenerVelocity",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerVelocity)
#else
  NULL
#endif
};

// Method: SetListenerForward
static const ni::sParameterDef iSoundMixer3D_SetListenerForward_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerForward = {
  "SetListenerForward",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundMixer3D_SetListenerForward_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerForward)
#else
  NULL
#endif
};

// Method: GetListenerForward
static const ni::sMethodDef iSoundMixer3D_GetListenerForward = {
  "GetListenerForward",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerForward)
#else
  NULL
#endif
};

// Method: SetListenerUp
static const ni::sParameterDef iSoundMixer3D_SetListenerUp_Parameters[1] = { 
  { "aV", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerUp = {
  "SetListenerUp",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundMixer3D_SetListenerUp_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerUp)
#else
  NULL
#endif
};

// Method: GetListenerUp
static const ni::sMethodDef iSoundMixer3D_GetListenerUp = {
  "GetListenerUp",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerUp)
#else
  NULL
#endif
};

// Method: SetListenerDistanceScale
static const ni::sParameterDef iSoundMixer3D_SetListenerDistanceScale_Parameters[1] = { 
  { "afScale", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerDistanceScale = {
  "SetListenerDistanceScale",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundMixer3D_SetListenerDistanceScale_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerDistanceScale)
#else
  NULL
#endif
};

// Method: GetListenerDistanceScale
static const ni::sMethodDef iSoundMixer3D_GetListenerDistanceScale = {
  "GetListenerDistanceScale",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerDistanceScale)
#else
  NULL
#endif
};

// Method: SetListenerRolloffScale
static const ni::sParameterDef iSoundMixer3D_SetListenerRolloffScale_Parameters[1] = { 
  { "afScale", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerRolloffScale = {
  "SetListenerRolloffScale",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundMixer3D_SetListenerRolloffScale_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerRolloffScale)
#else
  NULL
#endif
};

// Method: GetListenerRolloffScale
static const ni::sMethodDef iSoundMixer3D_GetListenerRolloffScale = {
  "GetListenerRolloffScale",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerRolloffScale)
#else
  NULL
#endif
};

// Method: SetListenerDopplerScale
static const ni::sParameterDef iSoundMixer3D_SetListenerDopplerScale_Parameters[1] = { 
  { "afScale", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundMixer3D_SetListenerDopplerScale = {
  "SetListenerDopplerScale",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundMixer3D_SetListenerDopplerScale_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_SetListenerDopplerScale)
#else
  NULL
#endif
};

// Method: GetListenerDopplerScale
static const ni::sMethodDef iSoundMixer3D_GetListenerDopplerScale = {
  "GetListenerDopplerScale",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_GetListenerDopplerScale)
#else
  NULL
#endif
};

// Method: UpdateMixer3D
static const ni::sMethodDef iSoundMixer3D_UpdateMixer3D = {
  "UpdateMixer3D",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundMixer3D_UpdateMixer3D)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundMixer3D[] = {
	&iSoundMixer3D_GetFirst3DChannel,
	&iSoundMixer3D_GetIsChannel3D,
	&iSoundMixer3D_SetChannelMode,
	&iSoundMixer3D_GetChannelMode,
	&iSoundMixer3D_SetChannelPosition,
	&iSoundMixer3D_GetChannelPosition,
	&iSoundMixer3D_SetChannelVelocity,
	&iSoundMixer3D_GetChannelVelocity,
	&iSoundMixer3D_SetChannelMinDistance,
	&iSoundMixer3D_GetChannelMinDistance,
	&iSoundMixer3D_SetChannelMaxDistance,
	&iSoundMixer3D_GetChannelMaxDistance,
	&iSoundMixer3D_SetChannelConeInner,
	&iSoundMixer3D_GetChannelConeInner,
	&iSoundMixer3D_SetChannelConeOuter,
	&iSoundMixer3D_GetChannelConeOuter,
	&iSoundMixer3D_SetChannelConeOuterVolume,
	&iSoundMixer3D_GetChannelConeOuterVolume,
	&iSoundMixer3D_SetChannelConeDirection,
	&iSoundMixer3D_GetChannelConeDirection,
	&iSoundMixer3D_SetListenerPosition,
	&iSoundMixer3D_GetListenerPosition,
	&iSoundMixer3D_SetListenerVelocity,
	&iSoundMixer3D_GetListenerVelocity,
	&iSoundMixer3D_SetListenerForward,
	&iSoundMixer3D_GetListenerForward,
	&iSoundMixer3D_SetListenerUp,
	&iSoundMixer3D_GetListenerUp,
	&iSoundMixer3D_SetListenerDistanceScale,
	&iSoundMixer3D_GetListenerDistanceScale,
	&iSoundMixer3D_SetListenerRolloffScale,
	&iSoundMixer3D_GetListenerRolloffScale,
	&iSoundMixer3D_SetListenerDopplerScale,
	&iSoundMixer3D_GetListenerDopplerScale,
	&iSoundMixer3D_UpdateMixer3D,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundMixer3D[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iSoundMixer3D = {
  niGetInterfaceID(iSoundMixer3D),
  &niGetInterfaceUUID(iSoundMixer3D),
  1,
  Parents_iSoundMixer3D,
  niCountOf(Methods_iSoundMixer3D),Methods_iSoundMixer3D,
  NULL
};

	return &InterfaceDef_iSoundMixer3D;
}

// End of iSoundMixer3D wrapper


//////////////////////////////////////////////////////////////////////////////////////////////
// iSoundSource wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iSoundSource() {

// Method: SetSoundBuffer
static const ni::sParameterDef iSoundSource_SetSoundBuffer_Parameters[1] = { 
  { "apBuffer", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*" }
}; 
static const ni::sMethodDef iSoundSource_SetSoundBuffer = {
  "SetSoundBuffer",
  ni::eTypeFlags_MethodSetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "tBool",
  1, iSoundSource_SetSoundBuffer_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetSoundBuffer)
#else
  NULL
#endif
};

// Method: GetSoundBuffer
static const ni::sMethodDef iSoundSource_GetSoundBuffer = {
  "GetSoundBuffer",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iSoundBuffer), "iSoundBuffer*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetSoundBuffer)
#else
  NULL
#endif
};

// Method: SetMode
static const ni::sParameterDef iSoundSource_SetMode_Parameters[1] = { 
  { "aMode", ni::eType_Enum, NULL, "eSoundMode" }
}; 
static const ni::sMethodDef iSoundSource_SetMode = {
  "SetMode",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Enum, NULL, "void",
  1, iSoundSource_SetMode_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetMode)
#else
  NULL
#endif
};

// Method: GetMode
static const ni::sMethodDef iSoundSource_GetMode = {
  "GetMode",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "eSoundMode",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetMode)
#else
  NULL
#endif
};

// Method: SetPosition
static const ni::sParameterDef iSoundSource_SetPosition_Parameters[1] = { 
  { "avPos", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundSource_SetPosition = {
  "SetPosition",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundSource_SetPosition_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetPosition)
#else
  NULL
#endif
};

// Method: GetPosition
static const ni::sMethodDef iSoundSource_GetPosition = {
  "GetPosition",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetPosition)
#else
  NULL
#endif
};

// Method: SetVelocity
static const ni::sParameterDef iSoundSource_SetVelocity_Parameters[1] = { 
  { "avVel", ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "const sVec3f&" }
}; 
static const ni::sMethodDef iSoundSource_SetVelocity = {
  "SetVelocity",
  ni::eTypeFlags_MethodSetter|0|ni::eTypeFlags_Constant|ni::eType_Vec3f|ni::eTypeFlags_Pointer, NULL, "void",
  1, iSoundSource_SetVelocity_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetVelocity)
#else
  NULL
#endif
};

// Method: GetVelocity
static const ni::sMethodDef iSoundSource_GetVelocity = {
  "GetVelocity",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetVelocity)
#else
  NULL
#endif
};

// Method: SetMinDistance
static const ni::sParameterDef iSoundSource_SetMinDistance_Parameters[1] = { 
  { "fMin", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundSource_SetMinDistance = {
  "SetMinDistance",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundSource_SetMinDistance_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetMinDistance)
#else
  NULL
#endif
};

// Method: GetMinDistance
static const ni::sMethodDef iSoundSource_GetMinDistance = {
  "GetMinDistance",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetMinDistance)
#else
  NULL
#endif
};

// Method: SetMaxDistance
static const ni::sParameterDef iSoundSource_SetMaxDistance_Parameters[1] = { 
  { "fMax", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundSource_SetMaxDistance = {
  "SetMaxDistance",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundSource_SetMaxDistance_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetMaxDistance)
#else
  NULL
#endif
};

// Method: GetMaxDistance
static const ni::sMethodDef iSoundSource_GetMaxDistance = {
  "GetMaxDistance",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetMaxDistance)
#else
  NULL
#endif
};

// Method: SetPan
static const ni::sParameterDef iSoundSource_SetPan_Parameters[1] = { 
  { "afPanning", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundSource_SetPan = {
  "SetPan",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundSource_SetPan_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetPan)
#else
  NULL
#endif
};

// Method: GetPan
static const ni::sMethodDef iSoundSource_GetPan = {
  "GetPan",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetPan)
#else
  NULL
#endif
};

// Method: SetVolume
static const ni::sParameterDef iSoundSource_SetVolume_Parameters[1] = { 
  { "afVolume", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundSource_SetVolume = {
  "SetVolume",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundSource_SetVolume_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetVolume)
#else
  NULL
#endif
};

// Method: GetVolume
static const ni::sMethodDef iSoundSource_GetVolume = {
  "GetVolume",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetVolume)
#else
  NULL
#endif
};

// Method: SetSpeed
static const ni::sParameterDef iSoundSource_SetSpeed_Parameters[1] = { 
  { "afPitch", ni::eType_F32, NULL, "tF32" }
}; 
static const ni::sMethodDef iSoundSource_SetSpeed = {
  "SetSpeed",
  ni::eTypeFlags_MethodSetter|0|ni::eType_F32, NULL, "void",
  1, iSoundSource_SetSpeed_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetSpeed)
#else
  NULL
#endif
};

// Method: GetSpeed
static const ni::sMethodDef iSoundSource_GetSpeed = {
  "GetSpeed",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F32, NULL, "tF32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetSpeed)
#else
  NULL
#endif
};

// Method: SetLoop
static const ni::sParameterDef iSoundSource_SetLoop_Parameters[1] = { 
  { "abLoop", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iSoundSource_SetLoop = {
  "SetLoop",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I8, NULL, "void",
  1, iSoundSource_SetLoop_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_SetLoop)
#else
  NULL
#endif
};

// Method: GetLoop
static const ni::sMethodDef iSoundSource_GetLoop = {
  "GetLoop",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetLoop)
#else
  NULL
#endif
};

// Method: Play
static const ni::sMethodDef iSoundSource_Play = {
  "Play",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_Play)
#else
  NULL
#endif
};

// Method: Stop
static const ni::sMethodDef iSoundSource_Stop = {
  "Stop",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_Stop)
#else
  NULL
#endif
};

// Method: Pause
static const ni::sMethodDef iSoundSource_Pause = {
  "Pause",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_Pause)
#else
  NULL
#endif
};

// Method: GetIsPlaying
static const ni::sMethodDef iSoundSource_GetIsPlaying = {
  "GetIsPlaying",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetIsPlaying)
#else
  NULL
#endif
};

// Method: GetIsPaused
static const ni::sMethodDef iSoundSource_GetIsPaused = {
  "GetIsPaused",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_GetIsPaused)
#else
  NULL
#endif
};

// Method: Play2D
static const ni::sParameterDef iSoundSource_Play2D_Parameters[3] = { 
  { "afVolume", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afSpeed", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afPan", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundSource_Play2D = {
  "Play2D",
  0|ni::eType_I8, NULL, "ni::tBool",
  3, iSoundSource_Play2D_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_Play2D)
#else
  NULL
#endif
};

// Method: Play3D
static const ni::sParameterDef iSoundSource_Play3D_Parameters[6] = { 
  { "afVolume", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afSpeed", ni::eType_F32, NULL, "ni::tF32" }, 
  { "avPosition", ni::eType_Vec3f, NULL, "ni::sVec3f" }, 
  { "abListenerRelative", ni::eType_I8, NULL, "ni::tBool" }, 
  { "afMinDistance", ni::eType_F32, NULL, "ni::tF32" }, 
  { "afMaxDistance", ni::eType_F32, NULL, "ni::tF32" }
}; 
static const ni::sMethodDef iSoundSource_Play3D = {
  "Play3D",
  0|ni::eType_I8, NULL, "ni::tBool",
  6, iSoundSource_Play3D_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iSoundSource_Play3D)
#else
  NULL
#endif
};

static const ni::sMethodDef* Methods_iSoundSource[] = {
	&iSoundSource_SetSoundBuffer,
	&iSoundSource_GetSoundBuffer,
	&iSoundSource_SetMode,
	&iSoundSource_GetMode,
	&iSoundSource_SetPosition,
	&iSoundSource_GetPosition,
	&iSoundSource_SetVelocity,
	&iSoundSource_GetVelocity,
	&iSoundSource_SetMinDistance,
	&iSoundSource_GetMinDistance,
	&iSoundSource_SetMaxDistance,
	&iSoundSource_GetMaxDistance,
	&iSoundSource_SetPan,
	&iSoundSource_GetPan,
	&iSoundSource_SetVolume,
	&iSoundSource_GetVolume,
	&iSoundSource_SetSpeed,
	&iSoundSource_GetSpeed,
	&iSoundSource_SetLoop,
	&iSoundSource_GetLoop,
	&iSoundSource_Play,
	&iSoundSource_Stop,
	&iSoundSource_Pause,
	&iSoundSource_GetIsPlaying,
	&iSoundSource_GetIsPaused,
	&iSoundSource_Play2D,
	&iSoundSource_Play3D,

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iSoundSource[] = {
  &niGetInterfaceUUID(iDeviceResource),
};

static const ni::sInterfaceDef InterfaceDef_iSoundSource = {
  niGetInterfaceID(iSoundSource),
  &niGetInterfaceUUID(iSoundSource),
  1,
  Parents_iSoundSource,
  niCountOf(Methods_iSoundSource),Methods_iSoundSource,
  NULL
};

	return &InterfaceDef_iSoundSource;
}

// End of iSoundSource wrapper

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef


//////////////////////////////////////////////////////////////////////////////////////////////
// Enumerations definition
//////////////////////////////////////////////////////////////////////////////////////////////
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef

// --- eSoundFormat ---
niExportFunc(const ni::sEnumDef*) GetEnumDef_eSoundFormat() {

static const ni::sEnumValueDef Enum_eSoundFormat_Values[] = {
	{ "Unknown", ni::eSoundFormat_Unknown },
	{ "Mono8", ni::eSoundFormat_Mono8 },
	{ "Stereo8", ni::eSoundFormat_Stereo8 },
	{ "Mono16", ni::eSoundFormat_Mono16 },
	{ "Stereo16", ni::eSoundFormat_Stereo16 },
};
static const ni::sEnumDef Enum_eSoundFormat = {
	"eSoundFormat",
  niCountOf(Enum_eSoundFormat_Values), Enum_eSoundFormat_Values
};

	return &Enum_eSoundFormat;
}

// --- eSoundDriverCapFlags ---
niExportFunc(const ni::sEnumDef*) GetEnumDef_eSoundDriverCapFlags() {

static const ni::sEnumValueDef Enum_eSoundDriverCapFlags_Values[] = {
	{ "Buffer", ni::eSoundDriverCapFlags_Buffer },
	{ "Mixer", ni::eSoundDriverCapFlags_Mixer },
	{ "Mixer3D", ni::eSoundDriverCapFlags_Mixer3D },
};
static const ni::sEnumDef Enum_eSoundDriverCapFlags = {
	"eSoundDriverCapFlags",
  niCountOf(Enum_eSoundDriverCapFlags_Values), Enum_eSoundDriverCapFlags_Values
};

	return &Enum_eSoundDriverCapFlags;
}

// --- eSoundMode ---
niExportFunc(const ni::sEnumDef*) GetEnumDef_eSoundMode() {

static const ni::sEnumValueDef Enum_eSoundMode_Values[] = {
	{ "Normal2D", ni::eSoundMode_Normal2D },
	{ "Normal3D", ni::eSoundMode_Normal3D },
	{ "Relative3D", ni::eSoundMode_Relative3D },
};
static const ni::sEnumDef Enum_eSoundMode = {
	"eSoundMode",
  niCountOf(Enum_eSoundMode_Values), Enum_eSoundMode_Values
};

	return &Enum_eSoundMode;
}
#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef


//////////////////////////////////////////////////////////////////////////////////////////////
// Constants definition
//////////////////////////////////////////////////////////////////////////////////////////////
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef

//////////////////////////////////////////////////////////////////////////////////////////////
// GetModuleDef
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::iModuleDef*) GetModuleDef_niSound()
{
  static bool _initialized = false;
  if (!_initialized) {
    _initialized = true;
    niModuleDefImpl_GetModule_Register();
  }

//////////////////////////////////////////////////////////////////////////////////////////////
// Object types definition
//////////////////////////////////////////////////////////////////////////////////////////////
static const ni::sObjectTypeDef ObjectType__SoundFactory("niSound.SoundFactory",New_niSound_SoundFactory);


//////////////////////////////////////////////////////////////////////////////////////////////
// Module definition
//////////////////////////////////////////////////////////////////////////////////////////////
static const ni::achar* Dependencies[] = {
  "niLang",
};
static const ni::sObjectTypeDef* ObjectTypes[] = {
  &ObjectType__SoundFactory,
};

#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
static const ni::sInterfaceDef* Interfaces[] = {
  GetInterfaceDef_iSoundBuffer(),
  GetInterfaceDef_iSoundData(),
  GetInterfaceDef_iSoundDataLoader(),
  GetInterfaceDef_iSoundDriverBufferDataSink(),
  GetInterfaceDef_iSoundDriverBuffer(),
  GetInterfaceDef_iSoundDriver(),
  GetInterfaceDef_iSoundFactory(),
  GetInterfaceDef_iSoundFormat(),
  GetInterfaceDef_iSoundMixer(),
  GetInterfaceDef_iSoundMixer3D(),
  GetInterfaceDef_iSoundSource(),
};

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef
static const ni::sEnumDef* Enumerations[] = {
  GetEnumDef_eSoundFormat(),
  GetEnumDef_eSoundDriverCapFlags(),
  GetEnumDef_eSoundMode(),
};

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef

static const ni::sModuleDef ModuleDef(
  "niSound",
  "1,0,0",
  "Sound module (Build Date: " __DATE__ ")",
  "niLang Authors",
  "(c) 2022 The niLang Authors",
  1, Dependencies,
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
  niCountOf(Interfaces), Interfaces,
#else
	0, NULL,
#endif
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef
  niCountOf(Enumerations), Enumerations,
#else
	0, NULL,
#endif
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef
  0, NULL,
#else
	0, NULL,
#endif
  niCountOf(ObjectTypes), ObjectTypes
);

  return &ModuleDef;
}	// End of GetModuleDef_niSound
} // end of namespace ni

/// EOF //////////////////////////////////////////////////////////////////////////////////////
#include <niLang/Utils/ModuleDefImpl_End.h>
