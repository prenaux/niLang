// clang-format off
//////////////////////////////////////////////////////////////////////////////////////////////
//
// Autogenerated module definition for ni::niScript.
//
//////////////////////////////////////////////////////////////////////////////////////////////
//lint -e750 : local macro '_XXX_ModuleDef' (line NN, file _XXX_ModuleDef.cpp) not referenced
//lint -e766 : Header file '...\ModuleDefImpl_Begin.h' not used in module '_XXX_ModuleDef.cpp'

#include "stdafx.h"
#include "API/niScript_ModuleDef.h"
#include <niLang/Utils/ModuleDefImpl_Begin.h>

#ifndef niConfig_OnlyObjectTypesIDL
#endif // #ifndef niConfig_OnlyObjectTypesIDL



#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
#define _niScript_ModuleDef
#include <niLang/Utils/VMCallCImpl.h>
#ifndef niConfig_NoXCALL
#define IDLC_BEGIN_NAMESPACE() namespace ni { namespace xcall_cimpl {
#define IDLC_END_NAMESPACE() }}
#ifndef XCALL_CIMPL
#define XCALL_CIMPL(NAME) ni::xcall_cimpl::NAME
#endif
#include "_idl/IScriptObject.h.idl.inl"
#include "_idl/IScriptVM.h.idl.inl"
#include "_idl/VMAPI.h.idl.inl"
#endif // niConfig_NoXCALL
#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

namespace ni {
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef


//////////////////////////////////////////////////////////////////////////////////////////////
// iScriptObject wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
#if niMinFeatures(15)
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iScriptObject() {

#if niMinFeatures(15)
// Method: GetVM
static const ni::sMethodDef iScriptObject_GetVM = {
  "GetVM",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptVM), "iScriptVM*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetVM)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetType
static const ni::sMethodDef iScriptObject_GetType = {
  "GetType",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "eScriptObjectType",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetType)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Clone
static const ni::sParameterDef iScriptObject_Clone_Parameters[1] = { 
  { "abHoldRef", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iScriptObject_Clone = {
  "Clone",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  1, iScriptObject_Clone_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_Clone)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: EnumObjects
static const ni::sMethodDef iScriptObject_EnumObjects = {
  "EnumObjects",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(ni::iCollection), "tScriptObjectPtrCVec*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_EnumObjects)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetInt
static const ni::sMethodDef iScriptObject_GetInt = {
  "GetInt",
  0|ni::eType_I32, NULL, "tI32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetInt)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetFloat
static const ni::sMethodDef iScriptObject_GetFloat = {
  "GetFloat",
  ni::eTypeFlags_MethodGetter|0|ni::eType_F64, NULL, "tF64",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetFloat)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetString
static const ni::sMethodDef iScriptObject_GetString = {
  "GetString",
  ni::eTypeFlags_MethodGetter|0|ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetString)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetHString
static const ni::sMethodDef iScriptObject_GetHString = {
  "GetHString",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetHString)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetIUnknown
static const ni::sMethodDef iScriptObject_GetIUnknown = {
  "GetIUnknown",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetIUnknown)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetIUnknownEx
static const ni::sParameterDef iScriptObject_GetIUnknownEx_Parameters[1] = { 
  { "aIID", ni::eTypeFlags_Constant|ni::eType_UUID|ni::eTypeFlags_Pointer, NULL, "const tUUID&" }
}; 
static const ni::sMethodDef iScriptObject_GetIUnknownEx = {
  "GetIUnknownEx",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*",
  1, iScriptObject_GetIUnknownEx_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetIUnknownEx)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetVec2
static const ni::sMethodDef iScriptObject_GetVec2 = {
  "GetVec2",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec2f, NULL, "sVec2f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetVec2)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetVec3
static const ni::sMethodDef iScriptObject_GetVec3 = {
  "GetVec3",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec3f, NULL, "sVec3f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetVec3)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetVec4
static const ni::sMethodDef iScriptObject_GetVec4 = {
  "GetVec4",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Vec4f, NULL, "sVec4f",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetVec4)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetMatrix
static const ni::sMethodDef iScriptObject_GetMatrix = {
  "GetMatrix",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Matrixf, NULL, "sMatrixf",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetMatrix)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetUUID
static const ni::sMethodDef iScriptObject_GetUUID = {
  "GetUUID",
  ni::eTypeFlags_MethodGetter|0|ni::eTypeFlags_Constant|ni::eType_UUID|ni::eTypeFlags_Pointer, NULL, "const tUUID&",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetUUID)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetNumParameters
static const ni::sMethodDef iScriptObject_GetNumParameters = {
  "GetNumParameters",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetNumParameters)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetNumFreeVars
static const ni::sMethodDef iScriptObject_GetNumFreeVars = {
  "GetNumFreeVars",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetNumFreeVars)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetNumCallParameters
static const ni::sMethodDef iScriptObject_GetNumCallParameters = {
  "GetNumCallParameters",
  ni::eTypeFlags_MethodGetter|0|ni::eType_U32, NULL, "tU32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObject_GetNumCallParameters)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

static const ni::sMethodDef* Methods_iScriptObject[] = {
#if niMinFeatures(15)
	&iScriptObject_GetVM,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetType,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_Clone,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_EnumObjects,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetInt,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetFloat,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetString,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetHString,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetIUnknown,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetIUnknownEx,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetVec2,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetVec3,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetVec4,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetMatrix,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetUUID,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetNumParameters,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetNumFreeVars,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptObject_GetNumCallParameters,
#endif // niMinFeatures(15)

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iScriptObject[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iScriptObject = {
  niGetInterfaceID(iScriptObject),
  &niGetInterfaceUUID(iScriptObject),
  1,
  Parents_iScriptObject,
  niCountOf(Methods_iScriptObject),Methods_iScriptObject,
  NULL
};

	return &InterfaceDef_iScriptObject;
}

// End of iScriptObject wrapper
#endif // niMinFeatures(15)


//////////////////////////////////////////////////////////////////////////////////////////////
// iScriptObjectEnumSink wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
#if niMinFeatures(15)
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iScriptObjectEnumSink() {

#if niMinFeatures(15)
// Method: OnScriptObjectEnumSinkFound
static const ni::sParameterDef iScriptObjectEnumSink_OnScriptObjectEnumSinkFound_Parameters[3] = { 
  { "apVM", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptVM), "iScriptVM*" }, 
  { "apKey", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }, 
  { "apValue", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }
}; 
static const ni::sMethodDef iScriptObjectEnumSink_OnScriptObjectEnumSinkFound = {
  "OnScriptObjectEnumSinkFound",
  0|ni::eType_I8, NULL, "tBool",
  3, iScriptObjectEnumSink_OnScriptObjectEnumSinkFound_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptObjectEnumSink_OnScriptObjectEnumSinkFound)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

static const ni::sMethodDef* Methods_iScriptObjectEnumSink[] = {
#if niMinFeatures(15)
	&iScriptObjectEnumSink_OnScriptObjectEnumSinkFound,
#endif // niMinFeatures(15)

};

//// Interface dispatch wrapper /////////////////////////////
struct niHidden DispatchWrapper_iScriptObjectEnumSink : public ni::cIUnknownImpl<ni::iScriptObjectEnumSink,ni::eIUnknownImplFlags_Aggregatable|ni::eIUnknownImplFlags_NoRefCount>
{
	DispatchWrapper_iScriptObjectEnumSink(ni::iDispatch* apDispatch) {
    mprotected_pAggregateParent = apDispatch;
	}
	~DispatchWrapper_iScriptObjectEnumSink() {
    this->Invalidate();
  }

	ni::iUnknown* __stdcall QueryInterface(const ni::tUUID& aIID) niImpl {
    if (aIID == niGetInterfaceUUID(iScriptObjectEnumSink))
      return this;
		return mprotected_pAggregateParent->QueryInterface(aIID);
	}
	void __stdcall ListInterfaces(ni::iMutableCollection* apLst, ni::tU32 anFlags) const niImpl {
    apLst->Add(niGetInterfaceUUID(iScriptObjectEnumSink));
		mprotected_pAggregateParent->ListInterfaces(apLst,anFlags);
	}

  // Method (0): iScriptObjectEnumSink::OnScriptObjectEnumSinkFound
  tBool __stdcall OnScriptObjectEnumSinkFound(iScriptVM * apVM, iScriptObject * apKey, iScriptObject * apValue) {
    ni::Var _var_;
    ni::Var _params_[3];
    _params_[0] = niIUnknownCast(apVM);
    _params_[1] = niIUnknownCast(apKey);
    _params_[2] = niIUnknownCast(apValue);
    if (((ni::iDispatch*)(mprotected_pAggregateParent))->CallMethod(&iScriptObjectEnumSink_OnScriptObjectEnumSinkFound,0,_params_,3,&_var_)) {
      if (VarIsType(&_var_,iScriptObjectEnumSink_OnScriptObjectEnumSinkFound.mReturnType,ni::eFalse)) {
        return (ni::tBool)_var_.GetI8();
      }
    }
    return ni::eFalse;
	}

	static ni::iUnknown* Create(ni::iDispatch* apDispatch) {
		niAssert(niIsOK(apDispatch));
    if (!apDispatch->InitializeMethods(Methods_iScriptObjectEnumSink, niCountOf(Methods_iScriptObjectEnumSink))) {
      niError(niFmt("Can't initialize dispatch methods for %s.",  "iScriptObjectEnumSink"));
      return NULL;
    }
		return niNew DispatchWrapper_iScriptObjectEnumSink(apDispatch);
	}
};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iScriptObjectEnumSink[] = {
  &niGetInterfaceUUID(iUnknown),
};

static const ni::sInterfaceDef InterfaceDef_iScriptObjectEnumSink = {
  niGetInterfaceID(iScriptObjectEnumSink),
  &niGetInterfaceUUID(iScriptObjectEnumSink),
  1,
  Parents_iScriptObjectEnumSink,
  niCountOf(Methods_iScriptObjectEnumSink),Methods_iScriptObjectEnumSink,
  DispatchWrapper_iScriptObjectEnumSink::Create
};

	return &InterfaceDef_iScriptObjectEnumSink;
}

// End of iScriptObjectEnumSink wrapper
#endif // niMinFeatures(15)


//////////////////////////////////////////////////////////////////////////////////////////////
// iScriptVM wrapper
//////////////////////////////////////////////////////////////////////////////////////////////
#if niMinFeatures(15)
niExportFunc(const ni::sInterfaceDef*) GetInterfaceDef_iScriptVM() {

#if niMinFeatures(15)
// Method: GetHandle
static const ni::sMethodDef iScriptVM_GetHandle = {
  "GetHandle",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IntPtr, NULL, "tIntPtr",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetHandle)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetParentVM
static const ni::sMethodDef iScriptVM_GetParentVM = {
  "GetParentVM",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptVM), "iScriptVM*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetParentVM)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Compile
static const ni::sParameterDef iScriptVM_Compile_Parameters[2] = { 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }, 
  { "aaszName", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }
}; 
static const ni::sMethodDef iScriptVM_Compile = {
  "Compile",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  2, iScriptVM_Compile_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_Compile)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CompileString
static const ni::sParameterDef iScriptVM_CompileString_Parameters[2] = { 
  { "aaszCode", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }, 
  { "aaszName", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }
}; 
static const ni::sMethodDef iScriptVM_CompileString = {
  "CompileString",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  2, iScriptVM_CompileString_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CompileString)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CompileGetIUnknownObject
static const ni::sParameterDef iScriptVM_CompileGetIUnknownObject_Parameters[4] = { 
  { "apThisTable", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }, 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }, 
  { "aaszObjectName", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }, 
  { "aIID", ni::eTypeFlags_Constant|ni::eType_UUID|ni::eTypeFlags_Pointer, NULL, "const tUUID&" }
}; 
static const ni::sMethodDef iScriptVM_CompileGetIUnknownObject = {
  "CompileGetIUnknownObject",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*",
  4, iScriptVM_CompileGetIUnknownObject_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CompileGetIUnknownObject)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Run
static const ni::sParameterDef iScriptVM_Run_Parameters[2] = { 
  { "apThis", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }, 
  { "aaszCommand", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }
}; 
static const ni::sMethodDef iScriptVM_Run = {
  "Run",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_Run_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_Run)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CollectGarbage
static const ni::sMethodDef iScriptVM_CollectGarbage = {
  "CollectGarbage",
  0|ni::eType_I32, NULL, "tI32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CollectGarbage)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: EnableDebugInfos
static const ni::sParameterDef iScriptVM_EnableDebugInfos_Parameters[1] = { 
  { "abEnabled", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iScriptVM_EnableDebugInfos = {
  "EnableDebugInfos",
  0|ni::eType_Null, NULL, "void",
  1, iScriptVM_EnableDebugInfos_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_EnableDebugInfos)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: AreDebugInfosEnabled
static const ni::sMethodDef iScriptVM_AreDebugInfosEnabled = {
  "AreDebugInfosEnabled",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_AreDebugInfosEnabled)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: SetErrorLineOffset
static const ni::sParameterDef iScriptVM_SetErrorLineOffset_Parameters[1] = { 
  { "anOffset", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iScriptVM_SetErrorLineOffset = {
  "SetErrorLineOffset",
  ni::eTypeFlags_MethodSetter|0|ni::eType_I32, NULL, "void",
  1, iScriptVM_SetErrorLineOffset_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_SetErrorLineOffset)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetErrorLineOffset
static const ni::sMethodDef iScriptVM_GetErrorLineOffset = {
  "GetErrorLineOffset",
  ni::eTypeFlags_MethodGetter|0|ni::eType_I32, NULL, "tI32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetErrorLineOffset)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: SetRaiseErrorMode
static const ni::sParameterDef iScriptVM_SetRaiseErrorMode_Parameters[1] = { 
  { "aMode", ni::eType_Enum, NULL, "eScriptRaiseErrorMode" }
}; 
static const ni::sMethodDef iScriptVM_SetRaiseErrorMode = {
  "SetRaiseErrorMode",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Enum, NULL, "eScriptRaiseErrorMode",
  1, iScriptVM_SetRaiseErrorMode_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_SetRaiseErrorMode)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetRaiseErrorMode
static const ni::sMethodDef iScriptVM_GetRaiseErrorMode = {
  "GetRaiseErrorMode",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "eScriptRaiseErrorMode",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetRaiseErrorMode)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: SetLogRaiseError
static const ni::sParameterDef iScriptVM_SetLogRaiseError_Parameters[1] = { 
  { "aLog", ni::eType_Enum, NULL, "tLogFlags" }
}; 
static const ni::sMethodDef iScriptVM_SetLogRaiseError = {
  "SetLogRaiseError",
  ni::eTypeFlags_MethodSetter|0|ni::eType_Enum, NULL, "void",
  1, iScriptVM_SetLogRaiseError_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_SetLogRaiseError)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetLogRaiseError
static const ni::sMethodDef iScriptVM_GetLogRaiseError = {
  "GetLogRaiseError",
  ni::eTypeFlags_MethodGetter|0|ni::eType_Enum, NULL, "tLogFlags",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetLogRaiseError)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: RegisterFunction
static const ni::sParameterDef iScriptVM_RegisterFunction_Parameters[2] = { 
  { "apFunction", ni::eTypeFlags_Constant|ni::eType_Null|ni::eTypeFlags_Pointer, NULL, "const sMethodDef*" }, 
  { "aaszName", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }
}; 
static const ni::sMethodDef iScriptVM_RegisterFunction = {
  "RegisterFunction",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_RegisterFunction_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_RegisterFunction)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushRootTable
static const ni::sMethodDef iScriptVM_PushRootTable = {
  "PushRootTable",
  0|ni::eType_I8, NULL, "tBool",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushRootTable)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushString
static const ni::sParameterDef iScriptVM_PushString_Parameters[1] = { 
  { "ahspValue", ni::eTypeFlags_Constant|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "const iHString*" }
}; 
static const ni::sMethodDef iScriptVM_PushString = {
  "PushString",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_PushString_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushString)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushInteger
static const ni::sParameterDef iScriptVM_PushInteger_Parameters[1] = { 
  { "anValue", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iScriptVM_PushInteger = {
  "PushInteger",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_PushInteger_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushInteger)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushFloat
static const ni::sParameterDef iScriptVM_PushFloat_Parameters[1] = { 
  { "afValue", ni::eType_F64, NULL, "tF64" }
}; 
static const ni::sMethodDef iScriptVM_PushFloat = {
  "PushFloat",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_PushFloat_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushFloat)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushInterface
static const ni::sParameterDef iScriptVM_PushInterface_Parameters[1] = { 
  { "apInterface", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*" }
}; 
static const ni::sMethodDef iScriptVM_PushInterface = {
  "PushInterface",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_PushInterface_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushInterface)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushVariant
static const ni::sParameterDef iScriptVM_PushVariant_Parameters[1] = { 
  { "aVar", ni::eTypeFlags_Constant|ni::eType_Variant|ni::eTypeFlags_Pointer, NULL, "const Var&" }
}; 
static const ni::sMethodDef iScriptVM_PushVariant = {
  "PushVariant",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_PushVariant_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushVariant)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: PushObject
static const ni::sParameterDef iScriptVM_PushObject_Parameters[1] = { 
  { "apObject", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }
}; 
static const ni::sMethodDef iScriptVM_PushObject = {
  "PushObject",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_PushObject_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_PushObject)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Pop
static const ni::sParameterDef iScriptVM_Pop_Parameters[1] = { 
  { "anNumPop", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iScriptVM_Pop = {
  "Pop",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_Pop_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_Pop)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetStackSize
static const ni::sMethodDef iScriptVM_GetStackSize = {
  "GetStackSize",
  0|ni::eType_I32, NULL, "tI32",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetStackSize)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: SetStackSize
static const ni::sParameterDef iScriptVM_SetStackSize_Parameters[1] = { 
  { "anSize", ni::eType_U32, NULL, "tU32" }
}; 
static const ni::sMethodDef iScriptVM_SetStackSize = {
  "SetStackSize",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_SetStackSize_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_SetStackSize)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CreateSlot
static const ni::sParameterDef iScriptVM_CreateSlot_Parameters[1] = { 
  { "idx", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iScriptVM_CreateSlot = {
  "CreateSlot",
  0|ni::eType_I8, NULL, "tBool",
  1, iScriptVM_CreateSlot_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CreateSlot)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: GetImportFileSystems
static const ni::sMethodDef iScriptVM_GetImportFileSystems = {
  "GetImportFileSystems",
  ni::eTypeFlags_MethodGetter|0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(ni::iCollection), "tInterfaceCVec<iFileSystem>*",
  0, NULL,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_GetImportFileSystems)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: ImportFileOpen
static const ni::sParameterDef iScriptVM_ImportFileOpen_Parameters[1] = { 
  { "aaszFile", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }
}; 
static const ni::sMethodDef iScriptVM_ImportFileOpen = {
  "ImportFileOpen",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*",
  1, iScriptVM_ImportFileOpen_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_ImportFileOpen)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Import
static const ni::sParameterDef iScriptVM_Import_Parameters[2] = { 
  { "apPathOrFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*" }, 
  { "apDestTable", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }
}; 
static const ni::sMethodDef iScriptVM_Import = {
  "Import",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_Import_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_Import)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: NewImport
static const ni::sParameterDef iScriptVM_NewImport_Parameters[2] = { 
  { "apPathOrFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*" }, 
  { "apDestTable", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }
}; 
static const ni::sMethodDef iScriptVM_NewImport = {
  "NewImport",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_NewImport_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_NewImport)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CreateTable
static const ni::sParameterDef iScriptVM_CreateTable_Parameters[2] = { 
  { "apDelegate", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }, 
  { "anNumPop", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iScriptVM_CreateTable = {
  "CreateTable",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  2, iScriptVM_CreateTable_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CreateTable)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CreateObject
static const ni::sParameterDef iScriptVM_CreateObject_Parameters[2] = { 
  { "anIndex", ni::eType_I32, NULL, "tI32" }, 
  { "anNumPop", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iScriptVM_CreateObject = {
  "CreateObject",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  2, iScriptVM_CreateObject_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CreateObject)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CreateObjectGet
static const ni::sParameterDef iScriptVM_CreateObjectGet_Parameters[3] = { 
  { "aaszKey", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }, 
  { "aRequiredType", ni::eType_Enum, NULL, "eScriptObjectType" }, 
  { "anNumPop", ni::eType_I32, NULL, "tI32" }
}; 
static const ni::sMethodDef iScriptVM_CreateObjectGet = {
  "CreateObjectGet",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  3, iScriptVM_CreateObjectGet_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CreateObjectGet)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Call
static const ni::sParameterDef iScriptVM_Call_Parameters[2] = { 
  { "anNumParams", ni::eType_U32, NULL, "tU32" }, 
  { "abPushRet", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iScriptVM_Call = {
  "Call",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_Call_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_Call)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: WriteClosure
static const ni::sParameterDef iScriptVM_WriteClosure_Parameters[2] = { 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }, 
  { "apObject", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*" }
}; 
static const ni::sMethodDef iScriptVM_WriteClosure = {
  "WriteClosure",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_WriteClosure_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_WriteClosure)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: ReadClosure
static const ni::sParameterDef iScriptVM_ReadClosure_Parameters[1] = { 
  { "apFile", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iFile), "iFile*" }
}; 
static const ni::sMethodDef iScriptVM_ReadClosure = {
  "ReadClosure",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  1, iScriptVM_ReadClosure_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_ReadClosure)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: ScriptCall
static const ni::sParameterDef iScriptVM_ScriptCall_Parameters[5] = { 
  { "aaszModule", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }, 
  { "aaszFunc", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }, 
  { "apParams", ni::eTypeFlags_Constant|ni::eType_Variant|ni::eTypeFlags_Pointer, NULL, "const Var*" }, 
  { "anNumParams", ni::eType_U32, NULL, "tU32" }, 
  { "apRet", ni::eType_Variant|ni::eTypeFlags_Pointer, NULL, "Var*" }
}; 
static const ni::sMethodDef iScriptVM_ScriptCall = {
  "ScriptCall",
  0|ni::eType_I8, NULL, "tBool",
  5, iScriptVM_ScriptCall_Parameters,
NULL
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: ScriptVar
static const ni::sParameterDef iScriptVM_ScriptVar_Parameters[2] = { 
  { "aaszModule", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }, 
  { "aaszVar", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const achar*" }
}; 
static const ni::sMethodDef iScriptVM_ScriptVar = {
  "ScriptVar",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iScriptObject), "iScriptObject*",
  2, iScriptVM_ScriptVar_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_ScriptVar)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: EvalString
static const ni::sParameterDef iScriptVM_EvalString_Parameters[2] = { 
  { "ahspContext", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }, 
  { "aaszCode", ni::eTypeFlags_Constant|ni::eType_AChar|ni::eTypeFlags_Pointer, NULL, "const ni::achar*" }
}; 
static const ni::sMethodDef iScriptVM_EvalString = {
  "EvalString",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_EvalString_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_EvalString)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: CanEvalImpl
static const ni::sParameterDef iScriptVM_CanEvalImpl_Parameters[2] = { 
  { "ahspContext", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }, 
  { "ahspCodeResource", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }
}; 
static const ni::sMethodDef iScriptVM_CanEvalImpl = {
  "CanEvalImpl",
  0|ni::eType_I8, NULL, "tBool",
  2, iScriptVM_CanEvalImpl_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_CanEvalImpl)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: EvalImpl
static const ni::sParameterDef iScriptVM_EvalImpl_Parameters[3] = { 
  { "ahspContext", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }, 
  { "ahspCodeResource", ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iHString), "iHString*" }, 
  { "aIID", ni::eTypeFlags_Constant|ni::eType_UUID|ni::eTypeFlags_Pointer, NULL, "const tUUID&" }
}; 
static const ni::sMethodDef iScriptVM_EvalImpl = {
  "EvalImpl",
  0|ni::eType_IUnknown|ni::eTypeFlags_Pointer, &niGetInterfaceUUID(iUnknown), "iUnknown*",
  3, iScriptVM_EvalImpl_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_EvalImpl)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

#if niMinFeatures(15)
// Method: Service
static const ni::sParameterDef iScriptVM_Service_Parameters[1] = { 
  { "abForceGC", ni::eType_I8, NULL, "tBool" }
}; 
static const ni::sMethodDef iScriptVM_Service = {
  "Service",
  0|ni::eType_Null, NULL, "void",
  1, iScriptVM_Service_Parameters,
#ifndef niConfig_NoXCALL
  XCALL_CIMPL(iScriptVM_Service)
#else
  NULL
#endif
};
#endif // niMinFeatures(15)

static const ni::sMethodDef* Methods_iScriptVM[] = {
#if niMinFeatures(15)
	&iScriptVM_GetHandle,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_GetParentVM,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_Compile,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CompileString,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CompileGetIUnknownObject,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_Run,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CollectGarbage,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_EnableDebugInfos,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_AreDebugInfosEnabled,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_SetErrorLineOffset,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_GetErrorLineOffset,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_SetRaiseErrorMode,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_GetRaiseErrorMode,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_SetLogRaiseError,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_GetLogRaiseError,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_RegisterFunction,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushRootTable,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushString,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushInteger,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushFloat,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushInterface,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushVariant,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_PushObject,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_Pop,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_GetStackSize,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_SetStackSize,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CreateSlot,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_GetImportFileSystems,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_ImportFileOpen,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_Import,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_NewImport,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CreateTable,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CreateObject,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CreateObjectGet,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_Call,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_WriteClosure,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_ReadClosure,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_ScriptCall,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_ScriptVar,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_EvalString,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_CanEvalImpl,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_EvalImpl,
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	&iScriptVM_Service,
#endif // niMinFeatures(15)

};

//// Interface description //////////////////////////////////
static const ni::tUUID* Parents_iScriptVM[] = {
  &niGetInterfaceUUID(iScriptingHost),
};

static const ni::sInterfaceDef InterfaceDef_iScriptVM = {
  niGetInterfaceID(iScriptVM),
  &niGetInterfaceUUID(iScriptVM),
  1,
  Parents_iScriptVM,
  niCountOf(Methods_iScriptVM),Methods_iScriptVM,
  NULL
};

	return &InterfaceDef_iScriptVM;
}

// End of iScriptVM wrapper
#endif // niMinFeatures(15)

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef


//////////////////////////////////////////////////////////////////////////////////////////////
// Enumerations definition
//////////////////////////////////////////////////////////////////////////////////////////////
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef

// --- eScriptObjectType ---
#if niMinFeatures(15)
niExportFunc(const ni::sEnumDef*) GetEnumDef_eScriptObjectType() {

static const ni::sEnumValueDef Enum_eScriptObjectType_Values[] = {
#if niMinFeatures(15)
	{ "Unknown", ni::eScriptObjectType_Unknown },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Function", ni::eScriptObjectType_Function },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Table", ni::eScriptObjectType_Table },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Null", ni::eScriptObjectType_Null },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Int", ni::eScriptObjectType_Int },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Float", ni::eScriptObjectType_Float },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "String", ni::eScriptObjectType_String },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "UserData", ni::eScriptObjectType_UserData },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Array", ni::eScriptObjectType_Array },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "VM", ni::eScriptObjectType_VM },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "IUnknown", ni::eScriptObjectType_IUnknown },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Vec2", ni::eScriptObjectType_Vec2 },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Vec3", ni::eScriptObjectType_Vec3 },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Vec4", ni::eScriptObjectType_Vec4 },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Matrix", ni::eScriptObjectType_Matrix },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "UUID", ni::eScriptObjectType_UUID },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Last", ni::eScriptObjectType_Last },
#endif // niMinFeatures(15)
};
static const ni::sEnumDef Enum_eScriptObjectType = {
	"eScriptObjectType",
  niCountOf(Enum_eScriptObjectType_Values), Enum_eScriptObjectType_Values
};

	return &Enum_eScriptObjectType;
}
#endif // niMinFeatures(15)

// --- eScriptRaiseErrorMode ---
#if niMinFeatures(15)
niExportFunc(const ni::sEnumDef*) GetEnumDef_eScriptRaiseErrorMode() {

static const ni::sEnumValueDef Enum_eScriptRaiseErrorMode_Values[] = {
#if niMinFeatures(15)
	{ "Silent", ni::eScriptRaiseErrorMode_Silent },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Error", ni::eScriptRaiseErrorMode_Error },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "ShortCallstack", ni::eScriptRaiseErrorMode_ShortCallstack },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Callstack", ni::eScriptRaiseErrorMode_Callstack },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "ShortLocals", ni::eScriptRaiseErrorMode_ShortLocals },
#endif // niMinFeatures(15)
#if niMinFeatures(15)
	{ "Locals", ni::eScriptRaiseErrorMode_Locals },
#endif // niMinFeatures(15)
};
static const ni::sEnumDef Enum_eScriptRaiseErrorMode = {
	"eScriptRaiseErrorMode",
  niCountOf(Enum_eScriptRaiseErrorMode_Values), Enum_eScriptRaiseErrorMode_Values
};

	return &Enum_eScriptRaiseErrorMode;
}
#endif // niMinFeatures(15)
#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef


//////////////////////////////////////////////////////////////////////////////////////////////
// Constants definition
//////////////////////////////////////////////////////////////////////////////////////////////
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef

//////////////////////////////////////////////////////////////////////////////////////////////
// GetModuleDef
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::iModuleDef*) GetModuleDef_niScript()
{
  static bool _initialized = false;
  if (!_initialized) {
    _initialized = true;
    niModuleDefImpl_GetModule_Register();
  }

//////////////////////////////////////////////////////////////////////////////////////////////
// Object types definition
//////////////////////////////////////////////////////////////////////////////////////////////
static const ni::sObjectTypeDef ObjectType__ScriptVM("niScript.ScriptVM",New_niScript_ScriptVM);
static const ni::sObjectTypeDef ObjectType__URLFileHandlerScript("niScript.URLFileHandlerScript",New_niScript_URLFileHandlerScript);


//////////////////////////////////////////////////////////////////////////////////////////////
// Module definition
//////////////////////////////////////////////////////////////////////////////////////////////
static const ni::sObjectTypeDef* ObjectTypes[] = {
  &ObjectType__ScriptVM,
  &ObjectType__URLFileHandlerScript,
};

#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
static const ni::sInterfaceDef* Interfaces[] = {
#if niMinFeatures(15)
  GetInterfaceDef_iScriptObject(),
#endif // niMinFeatures(15)
#if niMinFeatures(15)
  GetInterfaceDef_iScriptObjectEnumSink(),
#endif // niMinFeatures(15)
#if niMinFeatures(15)
  GetInterfaceDef_iScriptVM(),
#endif // niMinFeatures(15)
};

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef
static const ni::sEnumDef* Enumerations[] = {
#if niMinFeatures(15)
  GetEnumDef_eScriptObjectType(),
#endif // niMinFeatures(15)
#if niMinFeatures(15)
  GetEnumDef_eScriptRaiseErrorMode(),
#endif // niMinFeatures(15)
};

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef

static const ni::sModuleDef ModuleDef(
  "niScript",
  "1,0,0",
  "niScript module (Build Date: " __DATE__ ")",
  "niLang Authors",
  "(c) 2022 The niLang Authors",
  0, NULL,
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
  niCountOf(Interfaces), Interfaces,
#else
  0, NULL,
#endif
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef
  niCountOf(Enumerations), Enumerations,
#else
  0, NULL,
#endif
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef
  0, NULL,
#else
  0, NULL,
#endif
  niCountOf(ObjectTypes), ObjectTypes
);

  return &ModuleDef;
} // End of GetModuleDef_niScript
} // end of namespace ni

/// EOF //////////////////////////////////////////////////////////////////////////////////////
#include <niLang/Utils/ModuleDefImpl_End.h>
