<niIDL>
	<namespace name="ni">
		<interface name="iOverlay" uuid1="FC8D5E7E-931F-4388-B670-1E30B9B1A21F" uuid2="0xfc8d5e7e,0x931f,0x4388,0xb6,0x70,0x1e,0x30,0xb9,0xb1,0xa2,0x1f">
			<comments desc="iOverlay interface  "/>
			<parents>
				<parent name="iUnknown"/>
			</parents>
			<method
				const="yes"
				java_name="clone"
				name="Clone"
				num_parameters="0">
				<comments desc="Clone the overlay. "/>
				<return type="iOverlay *" typec="iOverlay*" typei="ni::eType_IUnknown|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getMaterial"
				name="GetMaterial"
				num_parameters="0"
				property="get"
				property_name2="material"
				property_name="material">
				<comments desc="Get the overlay&apos;s material. "/>
				<return type="iMaterial *" typec="iMaterial*" typei="ni::eType_IUnknown|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getImage"
				name="GetImage"
				num_parameters="0"
				property="get"
				property_name2="image"
				property_name="image">
				<comments desc="Get the overlay&apos;s base image if there&apos;s one. "/>
				<return type="iImage *" typec="iImage*" typei="ni::eType_IUnknown|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getBaseSize"
				name="GetBaseSize"
				num_parameters="0"
				property="get"
				property_name2="baseSize"
				property_name="base_size">
				<comments desc="Get the overlay&apos;s base size. ">
					<remark text="The base size is the size of the overlay&apos;s material. "/>
				</comments>
				<return type="sVec2f" typec="sVec2f" typei="ni::eType_Vec2f"/>
			</method>
			<method
				java_name="setPivot"
				name="SetPivot"
				num_parameters="1"
				property="set"
				property_name2="pivot"
				property_name="pivot">
				<comments desc="Set the overlay&apos;s pivot position. ">
					<remark text="The pivot position, is the offset at which the overaly is going to be drawn. "/>
					<remark text="If &lt; 1.0 the center position is considered to be relative to the overlay&apos;s size, else it&apos;s assumed to be &apos;absolute&apos;. "/>
					<remark text="Default is (0,0), the position is relative the the top left corner of the overlay. "/>
				</comments>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="avPivot"
					type="const sVec2f &amp;"
					typec="const sVec2f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec2f|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getPivot"
				name="GetPivot"
				num_parameters="0"
				property="get"
				property_name2="pivot"
				property_name="pivot">
				<comments desc="Get the overlay&apos;s pivot position. "/>
				<return type="sVec2f" typec="sVec2f" typei="ni::eType_Vec2f"/>
			</method>
			<method
				java_name="setSize"
				name="SetSize"
				num_parameters="1"
				property="set"
				property_name2="size"
				property_name="size">
				<comments desc="Set the overlay size. "/>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="avSize"
					type="sVec2f"
					typec="sVec2f"
					typei="ni::eType_Vec2f"/>
			</method>
			<method
				const="yes"
				java_name="getSize"
				name="GetSize"
				num_parameters="0"
				property="get"
				property_name2="size"
				property_name="size">
				<comments desc="Get the overlay position and size. "/>
				<return type="sVec2f" typec="sVec2f" typei="ni::eType_Vec2f"/>
			</method>
			<method
				java_name="setBlendMode"
				name="SetBlendMode"
				num_parameters="1"
				property="set"
				property_name2="blendMode"
				property_name="blend_mode">
				<comments desc="Set the rasterizer blend mode. ">
					<remark text="This changes the blend mode in the material. "/>
				</comments>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="aBlendMode"
					type="eBlendMode"
					typec="eBlendMode"
					typei="ni::eType_Enum"/>
			</method>
			<method
				const="yes"
				java_name="getBlendMode"
				name="GetBlendMode"
				num_parameters="0"
				property="get"
				property_name2="blendMode"
				property_name="blend_mode">
				<comments desc="Get the rasterizer blend mode. "/>
				<return type="eBlendMode" typec="eBlendMode" typei="ni::eType_Enum"/>
			</method>
			<method
				java_name="setFiltering"
				name="SetFiltering"
				num_parameters="1"
				property="set"
				property_name2="filtering"
				property_name="filtering">
				<comments desc="Set the filtering mode. ">
					<remark text="This changes the filtering type in the material. "/>
				</comments>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="abEnabled"
					type="tBool"
					typec="tBool"
					typei="ni::eType_I8"/>
			</method>
			<method
				const="yes"
				java_name="getFiltering"
				name="GetFiltering"
				num_parameters="0"
				property="get"
				property_name2="filtering"
				property_name="filtering">
				<comments desc="Get the filtering mode. "/>
				<return type="tBool" typec="tBool" typei="ni::eType_I8"/>
			</method>
			<method
				java_name="setColor"
				name="SetColor"
				num_parameters="1"
				property="set"
				property_name2="color"
				property_name="color">
				<comments desc="Set the color of the overlay. "/>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="aColor"
					type="const sColor4f &amp;"
					typec="const sColor4f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec4f|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getColor"
				name="GetColor"
				num_parameters="0"
				property="get"
				property_name2="color"
				property_name="color">
				<comments desc="Get the color of the overlay. "/>
				<return type="sColor4f" typec="sColor4f" typei="ni::eType_Vec4f"/>
			</method>
			<method
				java_name="setCornerColor"
				name="SetCornerColor"
				num_parameters="2"
				property="set"
				property_name2="cornerColor"
				property_name="corner_color">
				<comments desc="Set the color of the overlay. ">
					<params text="aCorner specify the corner(s) on which the color apply. "/>
					<params text="aColor is the new color of the corner. "/>
				</comments>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					name="aCorner"
					type="eRectCorners"
					typec="eRectCorners"
					typei="ni::eType_Enum"/>
				<parameter
					last="1"
					name="aColor"
					type="const sColor4f &amp;"
					typec="const sColor4f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec4f|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getCornerColor"
				name="GetCornerColor"
				num_parameters="1"
				property="get"
				property_name2="cornerColor"
				property_name="corner_color">
				<comments desc="Get the color of the overlay. " return="the color of the specified corner of the overlay. ">
					<params text="aCorner is the corner to get the color of. "/>
				</comments>
				<return type="sColor4f" typec="sColor4f" typei="ni::eType_Vec4f"/>
				<parameter
					last="1"
					name="aCorner"
					type="eRectCorners"
					typec="eRectCorners"
					typei="ni::eType_Enum"/>
			</method>
			<method
				java_name="setMapping"
				name="SetMapping"
				num_parameters="1"
				property="set"
				property_name2="mapping"
				property_name="mapping">
				<comments desc="Set the overlay&apos;s mapping coordinates. "/>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="aRect"
					type="const sRectf &amp;"
					typec="const sRectf&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec4f|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getMapping"
				name="GetMapping"
				num_parameters="0"
				property="get"
				property_name2="mapping"
				property_name="mapping">
				<comments desc="Get the overlay&apos;s mapping coordinates. "/>
				<return type="sRectf" typec="sRectf" typei="ni::eType_Vec4f"/>
			</method>
			<method
				java_name="setFrame"
				name="SetFrame"
				num_parameters="1"
				property="set"
				property_name2="frame"
				property_name="frame">
				<comments desc="Set the overlay&apos;s frame. "/>
				<return type="void" typec="void" typei="ni::eType_Null"/>
				<parameter
					last="1"
					name="aFrameBorder"
					type="const sVec4f &amp;"
					typec="const sVec4f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec4f|ni::eTypeFlags_Pointer"/>
			</method>
			<method
				const="yes"
				java_name="getFrame"
				name="GetFrame"
				num_parameters="0"
				property="get"
				property_name2="frame"
				property_name="frame">
				<comments desc="Get the overlay&apos;s frame. "/>
				<return type="sVec4f" typec="sVec4f" typei="ni::eType_Vec4f"/>
			</method>
			<method
				const="yes"
				java_name="getIsFrame"
				name="GetIsFrame"
				num_parameters="0"
				property="get"
				property_name2="isFrame"
				property_name="is_frame">
				<comments desc="Get whether a frame is activated. ">
					<remark text="A frame is defined if the frame is != Vec4::Zero "/>
				</comments>
				<return type="tBool" typec="tBool" typei="ni::eType_I8"/>
			</method>
			<method
				const="yes"
				java_name="computeFrameCenter"
				name="ComputeFrameCenter"
				num_parameters="1">
				<comments desc="Compute the center of the frame from the provided destination rectangle. "/>
				<return type="sRectf" typec="sRectf" typei="ni::eType_Vec4f"/>
				<parameter
					last="1"
					name="aDest"
					type="const sRectf &amp;"
					typec="const sRectf&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec4f|ni::eTypeFlags_Pointer"/>
			</method>
			<method java_name="draw" name="Draw" num_parameters="3">
				<comments desc=""/>
				<return type="tBool" typec="tBool" typei="ni::eType_I8"/>
				<parameter
					name="apCanvas"
					type="iCanvas *"
					typec="iCanvas*"
					typei="ni::eType_IUnknown|ni::eTypeFlags_Pointer"/>
				<parameter
					name="aPos"
					type="const sVec2f &amp;"
					typec="const sVec2f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec2f|ni::eTypeFlags_Pointer"/>
				<parameter
					last="1"
					name="aSize"
					type="const sVec2f &amp;"
					typec="const sVec2f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec2f|ni::eTypeFlags_Pointer"/>
			</method>
			<method java_name="drawFrame" name="DrawFrame" num_parameters="4">
				<comments desc=""/>
				<return type="tBool" typec="tBool" typei="ni::eType_I8"/>
				<parameter
					name="apCanvas"
					type="iCanvas *"
					typec="iCanvas*"
					typei="ni::eType_IUnknown|ni::eTypeFlags_Pointer"/>
				<parameter
					name="aFrame"
					type="tRectFrameFlags"
					typec="tRectFrameFlags"
					typei="ni::eType_Enum"/>
				<parameter
					name="aPos"
					type="const sVec2f &amp;"
					typec="const sVec2f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec2f|ni::eTypeFlags_Pointer"/>
				<parameter
					last="1"
					name="aSize"
					type="const sVec2f &amp;"
					typec="const sVec2f&amp;"
					typei="ni::eTypeFlags_Constant|ni::eType_Vec2f|ni::eTypeFlags_Pointer"/>
			</method>
		</interface>
	</namespace>
</niIDL>