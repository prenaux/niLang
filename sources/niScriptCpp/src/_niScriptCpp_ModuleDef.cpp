// clang-format off
//////////////////////////////////////////////////////////////////////////////////////////////
//
// Autogenerated module definition for ni::niScriptCpp.
//
//////////////////////////////////////////////////////////////////////////////////////////////
//lint -e750 : local macro '_XXX_ModuleDef' (line NN, file _XXX_ModuleDef.cpp) not referenced
//lint -e766 : Header file '...\ModuleDefImpl_Begin.h' not used in module '_XXX_ModuleDef.cpp'

#include <niLang/Types.h>
#include <niLang/Utils/ObjModelImpl.h>
#include "API/niScriptCpp_ModuleDef.h"
#include <niLang/Utils/ModuleDefImpl_Begin.h>

#ifndef niConfig_OnlyObjectTypesIDL
#endif // #ifndef niConfig_OnlyObjectTypesIDL



#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
#define _niScriptCpp_ModuleDef
#include <niLang/Utils/VMCallCImpl.h>
#ifndef niConfig_NoXCALL
#define IDLC_BEGIN_NAMESPACE() namespace ni { namespace xcall_cimpl {
#define IDLC_END_NAMESPACE() }}
#ifndef XCALL_CIMPL
#define XCALL_CIMPL(NAME) ni::xcall_cimpl::NAME
#endif
#include "_idl/ScriptCpp.h.idl.inl"
#endif // niConfig_NoXCALL
#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

namespace ni {
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef



//////////////////////////////////////////////////////////////////////////////////////////////
// GetModuleDef
//////////////////////////////////////////////////////////////////////////////////////////////
niExportFunc(const ni::iModuleDef*) GetModuleDef_niScriptCpp()
{
  static bool _initialized = false;
  if (!_initialized) {
    _initialized = true;
    niModuleDefImpl_GetModule_Register();
  }

//////////////////////////////////////////////////////////////////////////////////////////////
// Object types definition
//////////////////////////////////////////////////////////////////////////////////////////////
static const ni::sObjectTypeDef ObjectType__ScriptingHost("niScriptCpp.ScriptingHost",New_niScriptCpp_ScriptingHost);


//////////////////////////////////////////////////////////////////////////////////////////////
// Module definition
//////////////////////////////////////////////////////////////////////////////////////////////
static const ni::achar* Dependencies[] = {
  "niLang",
};
static const ni::sObjectTypeDef* ObjectTypes[] = {
  &ObjectType__ScriptingHost,
};

#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

#endif // #if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef

static const ni::sModuleDef ModuleDef(
  "niScriptCpp",
  "1,0,0",
  "niScriptCpp module (Build Date: " __DATE__ ")",
  "",
  "",
  1, Dependencies,
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoInterfaceDef
  0, NULL,
#else
  0, NULL,
#endif
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoEnumDef
  0, NULL,
#else
  0, NULL,
#endif
#if !defined niConfig_OnlyObjectTypesIDL && !defined niConfig_NoConstDef
  0, NULL,
#else
  0, NULL,
#endif
  niCountOf(ObjectTypes), ObjectTypes
);

  return &ModuleDef;
} // End of GetModuleDef_niScriptCpp
} // end of namespace ni

/// EOF //////////////////////////////////////////////////////////////////////////////////////
#include <niLang/Utils/ModuleDefImpl_End.h>
